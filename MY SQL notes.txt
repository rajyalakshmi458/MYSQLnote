
											   DAY-1
											  -------

what is Data?
-------------
a data can be fact related to any instance/object.

	ex: student	--> student name,student age,student fee,....

	some times the data can be represented pdf,xml,image,audio,video,....

the Data can be categorized into 3-types,they are

	Structured Data(relational)	--> tables

	Semi Structured Data(partially relational)--> xml

	Unstructured Data(non relational)--> 				images,audio,video,graphs,maps,...

what is Information?
---------------------
the processed Data is known as a Information.

based on the information we can get knowledge.

	ref fig: data and information fig


what is Database?
-----------------
a Database is a collection of organized,related data.

types of Databases:

	Hierarchical Databases
	Distributed Databases
	Centralized Databases
	Network Databases
	Relational Databases(SQL Databases)
	Object Oriented Relational Databases
	No-SQL Databases
	Dataware Houses
	OLTP Databases
	Cloud Databases
	....
	.... etc.,


what is DBMS?
--------------
the DBMS(Database Management System's) is a software(collection of programs),which is used to create,manipulate and delete the databases.

	RDBMS(Relational Database Management System's)
		Oracle,Mysql,Sqlite3,MS-SQL server,DB2,....

	ORDBMS(Object Relational Database Management System's)
		PostgreSQL


No-SQL Databases:
-----------------
these databases are used to store any type of data.

No-SQL means Not Only SQL.

types of No-SQL Databases are

	Document Databases	--> MongoDB

	Column Databases	--> Cassandra,Hbase

	Key-value Databases	--> Redis

	Graph Databases		--> Neo4j


what is SQL?
-------------
SQL(Structured Query Language) is a Query Language,which is used to communicate the databases.

SQL language is introduced in the year of 1970's by E.F.Codd,in IBM

SQL follow the ANSI-C standards.

By using SQL,we are performeing the following operations,

	--> to create a databases
	--> to create a tables
	--> to inserting the data into database
	--> to retreive the data from the database
	--> to peform the update and delete opertations
	--> to create indexs,views,procedures,....
note:
-----
simply by using SQL to perform CURD/CRUD operations.

SQL is a case-insensitive language.


what is MySQL?
----------------
MySQL is a one relational database management system,it developed by oracle corporation.

MySQL is a completely free and opensource.

most of the companies are using MySQL Database.

if we want to working with MySQL Database,first we need to download and install manually.


how to download MySQL server?
-----------------------------
	goto https://www.mysql.com/downloads/
			|
	goto MySQL Community (GPL) Downloads
			|
	select MySQL Installer for Windows
			|
	to download any one file


how to install MySQL server?
-----------------------------
	double click on mysql server downloaded file
			|
		click on yes
			|
	to select developer(server) default option and click on next
			|
		click on next
			|	
		click on execute the installed packages
			|
		click on next
			|			
	to set your root account password,to check that password 
	and click on next
			|
		click on finish
		

Basic SQL Commands:
--------------------
Data Definition Languages(DDL):
---------------------------------
	these commands are used to define the database structure,table structure,apply some changes in our tables.

	these commands are auto commited statements

	Create,Alter(add,modify,rename,drop), Drop,Rename,Truncate.

Data Manipulation Languages(DML):
----------------------------------
	These commands are used to manipulate the data like insertions,deletions and updatetions.

	in Generally,These commands commited statements.

	Update,Insert,Delete

Data Retreival/Query Languages(DRL/DQL):
-----------------------------------------	
	These commands are used to retreive the data from the database.

	Select command is a DRL/DQL command

Data Control Languages(DCL):
----------------------------
	These commands are used to perform the Admin Level operations like giveing the permessions to the users and remove the permissions from the user.

	Grant and Revoke

Transaction Control Languages(TCL):
-------------------------------------	
	These commands are used to perform the operations at Transaction level i.e., sql query level.

	Commit, Rollback, Savepoint	
		

note:
-----
in mysql server,by default all commands are auto commited.

if we want to commit the transactions manually,in that case we are set autocommit value is False.

	syntax
	------
	set autocommit=false;


										DAY-2
									       -------


how to show the list of Databases in mysql server?
--------------------------------------------------
if we want to show the list of databases in mysql server,in that case we are using following command

	show databases;

ex:
---
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.05 sec)

note:
----
in sql, the sql statements are terminated by ";"

how to create a Database in MySQL server?
-----------------------------------------
if we want to create a Database in MySQL server,in that case we are using following command,

	syntax:
	------
	create database databasename;

ex:
---
mysql> create database my9amdb;
Query OK, 1 row affected (0.01 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| my9amdb            |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

how to use/connect particular database in MySQL server?
-------------------------------------------------------
if we want to connect/use particular database in MySQL server,in that case we are using following command

	syntax
	------
	use databasename;

ex:
---
mysql> use my9amdb;
Database changed

how to show the list of tables in the specified database?
----------------------------------------------------------
	if we want to show the list of tables in the specified database,in that case we are using following command,

	syntax
	-------
	show tables;

ex:
---
mysql> show tables;
Empty set (0.02 sec)

how to create a table in mysql database?
----------------------------------------
	if we want to create a tables in the database,in that case we are using following command,

	syntax
	------
	create table tablename(col_name_1 datatype(size) constraint_name,
			       col_name_2 datatype(size),
					....
					....
				col_name_n datatype(size));


ex:
---
mysql> create table emp(eid int primary key,ename char(20),esal decimal(6,2),dno int);
Query OK, 0 rows affected (0.04 sec)

mysql> show tables;
+-------------------+
| Tables_in_my9amdb |
+-------------------+
| emp               |
+-------------------+
1 row in set (0.00 sec)

how to describe the table structure?
------------------------------------
	if we want to describe the table structure,in that case we are using following command

	syntax
	-----
	desc tablename;

		(or)
	
	describe tablename;

ex:
---
mysql> desc emp;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| eid   | int          | NO   | PRI | NULL    |       |
| ename | char(20)     | YES  |     | NULL    |       |
| esal  | decimal(6,2) | YES  |     | NULL    |       |
| dno   | int          | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+
4 rows in set (0.02 sec)

		(or)

mysql> describe emp;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| eid   | int          | NO   | PRI | NULL    |       |
| ename | char(20)     | YES  |     | NULL    |       |
| esal  | decimal(6,2) | YES  |     | NULL    |       |
| dno   | int          | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

how to insert the data into table?
----------------------------------
	if we want to insert the data into table,in that case we are using following command,

	syntax
	-----
	insert into tablename values(value_1,value_2,value_3,...,value_n);


ex:
---
mysql> insert into emp values(101,"siva",3000,10);
Query OK, 1 row affected (0.04 sec)

mysql> insert into emp values(102,"rama",4000,20);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp values(102,"krishna",5000,30);
ERROR 1062 (23000): Duplicate entry '102' for key 'emp.PRIMARY'

mysql> insert into emp values(103,"krishna",5000,30);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp values(NULL,"sachin",4000,20);
ERROR 1048 (23000): Column 'eid' cannot be null


	syntax
	-------
	insert into tablename(col_name_1,col_name_2,....) values(value_1,value_2,....);


ex:
---
mysql> insert into emp(eid,ename,esal,dno) values(104,'sachin',4000,10);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp(eid,ename,esal,dno) values(105,'dhoni',5000,30);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp(eid,ename,esal,dno) values(106,'virat',4000,20);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp(eid,ename,esal,dno) values(107,'rohith',3000,10);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp(eid) values(108);
Query OK, 1 row affected (0.02 sec)

mysql> insert into emp(eid,ename) values(109,'abc');
Query OK, 1 row affected (0.01 sec)

how to retreive the data from the database?
-------------------------------------------
	if we want to retreive the data from the database,in that case we are using following command,

	syntax
	------
	select * from tablename;

	here * means to retreive all the columns from the table

ex:
---
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | NULL    |    NULL | NULL |
| 109 | abc     |    NULL | NULL |
+-----+---------+---------+------+
9 rows in set (0.00 sec)


	syntax
	------
	select col_name_1,col_name_2,....,col_name_n from tablename;

ex:
---
mysql> select eid,ename,dno from emp;
+-----+---------+------+
| eid | ename   | dno  |
+-----+---------+------+
| 101 | siva    |   10 |
| 102 | rama    |   20 |
| 103 | krishna |   30 |
| 104 | sachin  |   10 |
| 105 | dhoni   |   30 |
| 106 | virat   |   20 |
| 107 | rohith  |   10 |
| 108 | NULL    | NULL |
| 109 | abc     | NULL |
+-----+---------+------+
9 rows in set (0.00 sec)

assignment:
-----------
create a college database
	|--> create student table with(rno,name,add,fee,branch)
	|--> insert the 10 students data
	|--> retreive the student information

	ref fig: assignment_1

                                                                                     DAY-3
                                                                                    -------


how to alter the table?
------------------------
if we want to alter the table, in that case we are using "alter" command.

the "alter" command is a one DDL(Data Definition Langauge) command

the "alter" command is used to modify the structure of an existing table like

	we can add new column to the existing table
	we can modify the datatypes
	we can rename the existed column name
	we can drop the existed column

	syntax
	------
	alter table tablename clause  <clause code> ;


how to add new column to existed table?
---------------------------------------
	if we want to add the new column to existed table in that case we are using "add" clause of alter command.

	syntax
	-----
	alter table tablename add colum_name datatype(size);

ex1:
----
mysql> create table customer(cid int,cname char(20),loc varchar(20));
Query OK, 0 rows affected (0.15 sec)

mysql> desc customer;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| cid   | int         | YES  |     | NULL    |       |
| cname | char(20)    | YES  |     | NULL    |       |
| loc   | varchar(20) | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+
3 rows in set (0.04 sec)

mysql> alter table customer add cemail varchar(30);
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc customer;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| cid    | int         | YES  |     | NULL    |       |
| cname  | char(20)    | YES  |     | NULL    |       |
| loc    | varchar(20) | YES  |     | NULL    |       |
| cemail | varchar(30) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)


how to modify the datatype?
---------------------------
	if we want to modify the datatype,in that case we are using "modify" clause of alter command.

	syntax
	------
	alter table tablename modify colum_name datatype(size);

ex:
---
mysql> desc customer;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| cid    | int         | YES  |     | NULL    |       |
| cname  | char(20)    | YES  |     | NULL    |       |
| loc    | varchar(20) | YES  |     | NULL    |       |
| cemail | varchar(30) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> alter table customer modify cemail char(30);
Query OK, 0 rows affected (0.05 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc customer;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| cid    | int         | YES  |     | NULL    |       |
| cname  | char(20)    | YES  |     | NULL    |       |
| loc    | varchar(20) | YES  |     | NULL    |       |
| cemail | char(30)    | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)


how to rename the colmn?
------------------------
	if we want to rename the column,in that case we are using "rename" clause of alter command.

	syntax
	------
	alter table tablename rename column oldcolumnname to newcolumnname;

ex:
---
mysql> desc customer;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| cid    | int         | YES  |     | NULL    |       |
| cname  | char(20)    | YES  |     | NULL    |       |
| loc    | varchar(20) | YES  |     | NULL    |       |
| cemail | char(30)    | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> alter table customer rename column loc to location;
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc customer;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| cid      | int         | YES  |     | NULL    |       |
| cname    | char(20)    | YES  |     | NULL    |       |
| location | varchar(20) | YES  |     | NULL    |       |
| cemail   | char(30)    | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)


how to drop the column?
-----------------------
	if we want to drop the column,in that case we are using "drop" clause of alter command.

	syntax
	------
	alter table tablename drop column column_name;

ex:
---
mysql> desc customer;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| cid      | int         | YES  |     | NULL    |       |
| cname    | char(20)    | YES  |     | NULL    |       |
| location | varchar(20) | YES  |     | NULL    |       |
| cemail   | char(30)    | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> alter table customer drop column cemail;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc customer;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| cid      | int         | YES  |     | NULL    |       |
| cname    | char(20)    | YES  |     | NULL    |       |
| location | varchar(20) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

how to adding multiple columns to existed table at a time?
-----------------------------------------------------------
	if we want to add the multiple columns to existed table in mysql server,in that case we are using following command

	syntax
	------
	alter table tablename add column(col_name_1 datatype(size),
				         col_name_2 datatype(size),
						.....
						.....
					 col_name_n datatype(size));

ex:
---
mysql> desc customer;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| cid      | int         | YES  |     | NULL    |       |
| cname    | char(20)    | YES  |     | NULL    |       |
| location | varchar(20) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> alter table customer add column(email char(30),gender varchar(10));
Query OK, 0 rows affected (0.10 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> desc customer;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| cid      | int         | YES  |     | NULL    |       |
| cname    | char(20)    | YES  |     | NULL    |       |
| location | varchar(20) | YES  |     | NULL    |       |
| email    | char(30)    | YES  |     | NULL    |       |
| gender   | varchar(10) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
5 rows in set (0.00 sec)


how to rename the table?
------------------------
	if we want to rename the table,in that case we are using "rename" command.

	the "rename" command is a one DDL(Data Definition Language) command.

	syntax
	------
	rename table oldtablename to newtablename;

ex:
---
mysql> show tables;
+-------------------+
| Tables_in_my9amdb |
+-------------------+
| customer          |
| emp               |
+-------------------+
2 rows in set (0.01 sec)

mysql> rename table customer to cust;
Query OK, 0 rows affected (0.03 sec)

mysql> show tables;
+-------------------+
| Tables_in_my9amdb |
+-------------------+
| cust              |
| emp               |
+-------------------+
2 rows in set (0.00 sec)

how to truncate the table?
--------------------------
	if we want to truncate the table,in that case we are using "truncate" command.

	the "truncate" command is a one DDL(Data Definition Language).

	whenever we are performeing/executeing "truncate" command,in that case to delete the actual data permanently but metadata is avaialbale i.e., table structure is available.

	syntax
	-------
	truncate table tablename;

ex:
---
mysql> select * from cust;
+------+--------+----------+------------------+--------+
| cid  | cname  | location | email            | gender |
+------+--------+----------+------------------+--------+
|    1 | siva   | hyd      | siva@gmail.com   | M      |
|    2 | rama   | pune     | rama@gmail.com   | M      |
|    3 | seetha | hyd      | seetha@gmail.com | F      |
+------+--------+----------+------------------+--------+
3 rows in set (0.00 sec)

mysql> truncate table cust;
Query OK, 0 rows affected (0.04 sec)

mysql> select * from cust;
Empty set (0.00 sec)

mysql> show tables;
+-------------------+
| Tables_in_my9amdb |
+-------------------+
| cust              |
| emp               |
+-------------------+
2 rows in set (0.00 sec)

mysql> desc cust;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| cid      | int         | YES  |     | NULL    |       |
| cname    | char(20)    | YES  |     | NULL    |       |
| location | varchar(20) | YES  |     | NULL    |       |
| email    | char(30)    | YES  |     | NULL    |       |
| gender   | varchar(10) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
5 rows in set (0.00 sec)

how to drop the table?
----------------------
	if we want to drop the table,in that case we are using "drop" command.

	the "drop" command is a one DDL(Data Definition Language) command.

	whenever we are performeing/executeing "drop" command,in that case to delete both meta data(table structure) and actual data(table data) permanently.

	syntax
	------
	drop table tablename;

ex:
---
mysql> select * from cust;
+------+--------+----------+------------------+--------+
| cid  | cname  | location | email            | gender |
+------+--------+----------+------------------+--------+
|  101 | siva   | hyd      | siva@gmail.com   | M      |
|  102 | rama   | pune     | rama@gmail.com   | M      |
|  103 | seetha | hyd      | seetha@gmail.com | F      |
+------+--------+----------+------------------+--------+
3 rows in set (0.01 sec)

mysql> drop table cust;
Query OK, 0 rows affected (0.02 sec)

mysql> select * from cust;
ERROR 1146 (42S02): Table 'my9amdb.cust' doesn't exist
mysql> show tables;
+-------------------+
| Tables_in_my9amdb |
+-------------------+
| emp               |
+-------------------+
1 row in set (0.00 sec)

mysql> desc cust;
ERROR 1146 (42S02): Table 'my9amdb.cust' doesn't exist


										    DAY-4
										   -------


what is Datatype?
-----------------
data types are define the type of value that can be stored in a table column.

The specified data type tells Database server what kind of values it will store, how much space they require, and what type of operations it can perform with this type of data.

MySQL Data Types:
-----------------
There are many different data types you can store in a MySQL table.

	Numeric data types
	Date and time data types
	String data types
	Spatial data types
	JSON data types

Numeric Data Types:
-------------------
	if we want to storing the numbers in a database column, in that case we are using one of the numeric data types. 
	
MySQL supports both exact and approximate numeric data types.

Integer data types:
-------------------
Integer data types are used for whole numbers (integers). They include both positive and negative values.

		tinyint		--> 1 byte
		smallint	--> 2 byte's
		mediumint	--> 3 byte's
		int		--> 4 byte's
		bigint		--> 8 bytes


Floating-point data types:
----------------------------
Floating-point numeric data types are rational numbers used for representing approximate values.

FLOAT represents single-precision values that use 4 bytes 
DOUBLE represent double-precision values that use 8 bytes

The basic syntax for defining FLOAT/DOUBLE data types is FLOAT(M,D)/
DOUBLE(M,D).

M represents the total number of digits, while D is the number of decimals.

Fixed-point data types:
-----------------------
it represents an exact number, this data type is mostly used for data that relies on precise values (such as monetary data).

The basic syntax is DECIMAL(P,D), where P stands for precision (the number of significant digits) and D stands for scale (the number of digits after the decimal point).

Bit-value data types:
----------------------
The BIT data type stores binary values.

The syntax for this MySQL data type is BIT(N). If you do not specify N, the default value is 1.


Date and Time data types:
--------------------------
Date and time are commonly used data types. Whether you are storing a time of a data entry, a date of birth or the current timestamp, you use one of the following data types.

Date and time data types include:

	DATETIME
	TIMESTAMP
	DATE
	TIME
	YEAR


To store date and time values, use either DATETIME or TIMESTAMP. Both data types store information in the YYYY-MM-DD HH:MM:SS format. It includes the year, month, day, hour, minutes, and seconds.

The main difference between the two is their range:

DATETIME values range from 1000-01-01 00:00:00 to 9999-12-31 23:59:59.

TIMESTAMP values range from 1970-01-01 00:00:01 to 2038-01-19 03:14:07.


DATE is used for storing date values in the format YYYY-MM-DD (year, month, date).

the DATE data type supports the range 1000-01-01 to 9999-12-31.


TIME is used to store time values as HH-MM-SS (hours, minutes, seconds).

YEAR stores year values in the format YYYY.
It supports values within the range 1901-2155.

NOTE:
--------
While versions older than MySQL 5.7.5 supported both 2 and 4 digit entries for YEAR, there has been no 2-digit support since the 5.7.5 release.


String Data Types:
---------------------
if we want to storing the strings of data,in that case we are using one of the string data types. They can contain letters, numbers, images, or files.

Accordingly, there are several different string data types:

	CHAR and VARCHAR
	BINARY and VARBINARY
	BLOB and TEXT
	ENUM
	SET


CHAR and VARCHAR are data types used to store non-binary strings.

CHAR stores fixed-length strings (up to 255 characters). When creating a CHAR column, you specify the length using the CHAR(N) syntax. N is the number of characters you want to take up. If you do not define the length, it uses the default value 1.

VARCHAR stores variable-length string(up to 65535 characters).When creating a VARCHAR column, you specify the length using the VARCHAR(N) syntax. N is the number of characters you want to take up. If you do not define the length, it uses the default value 1.

BINARY and VARBINARY are used for binary strings.

BINARY is used for fixed-length binary strings, up to 255 bytes. The main syntax for defining such a column is BINARY(N), where N is the number of bytes.

VARBINARY stores variable-length binary strings, it stores up to 65535 bytes.The main syntax for defining such a column is VARBINARY(N), where N is the number of bytes.

BLOB and TEXT are used to store large amounts of data.

BLOB handles Binary Large Objects (that is, large sets of binary data such as images, audio or PDF files).

There are 4 kinds of BLOB data types to use, depending on the size of your data requires:

	TINYBLOB (0 – 255; 255 bytes)
	BLOB (0 – 65,535; 16 KB)
	MEDIUMBLOB (0 – 16,777,215; 16 MB)
	LONGBLOB (0 – 4,294,967,295; 4 GB)

TEXT data types are for storing longer strings of text. According to the amount of data required, there is:

	TINYTEXT (0 – 255; 255 bytes)
	TEXT (0 – 65,535; 16 KB)
	MEDIUMTEXT (0 – 16,777,215; 16 MB)
	LONGTEXT (0 – 4,294,967,295; 4 GB)


The ENUM data type is used to store one of the predefined possible values in a column. The column can have up to 65535 distinct values.

When creating an ENUM table column in MySQL, you specify a list of all the permitted values.

The SET data type has a predefined list of possible values stored in the column.

The main difference between the ENUM AND SET is,that SET allows an entry to have more than one value.

For example, if the column is defined as SET('Red','Orange','Yellow','Green') and has four possible values in the list, one entry could have the value ‘Red’, while another could have the value ‘Red’,’Yellow’.

The maximum number of permitted values is 64.


										DAY-5
									       -------

Spatial Data Types:
--------------------
When storing spatial data, you can use one of the many different spatial data types that MySQL supports. They are utilized to represent information about geometric shapes and physical location.

We can divide them into two groups:

	Single geometry values

	Collections of values

Single Geometry Values:
-----------------------
Single geometry data types include GEOMETRY, POINT, LINESTRING, and POLYGON.

GEOMETRY stores any type of a geometry/spatial value.

POINT is used for a single point value.

LINESTRING stores a collection of multiple points that form a line.

POLYGON is a data type used to store a collection of multiple points that form a polygonal surface.

Collection of Values:
--------------------
Collection of values data types include GEOMETRYCOLLECTION, MULTIPOINT, MULTILINE, and MULTIPOLYGON.

GEOMETRYCOLLECTION stores a collection of geometry/spatial values.

MULTIPOINT is used for storing a collection of multiple point values.

MULTILINE stores a collection of multiple lines.

MULTIPOLYGON is used for a collection of multiple polygons.


JSON Data Types:
-----------------
Since version 5.7.8, MySQL included support for the native JSON data type, allowing users to store and manage JSON(JavaScript Object Notation) documents through a database.

MySQL makes sure that the JSON documents are valid and stores them into the JSON column.


Sql Aliases:
-------------
the SQL Aliases are used to giving a temporary name to a table or column in a table.

an alias exist for only duration of the query

in sql to create a aliases by using "as" keyword.

	syntax: alias name for column
	------
	select column_name as "aliasname" from tablename;

ex1:
----
mysql> select eid,ename,esal as 'employe_salary',dno from emp;
+-----+---------+----------------+------+
| eid | ename   | employe_salary | dno  |
+-----+---------+----------------+------+
| 101 | siva    |        3000.00 |   10 |
| 102 | rama    |        4000.00 |   20 |
| 103 | krishna |        5000.00 |   30 |
| 104 | sachin  |        4000.00 |   10 |
| 105 | dhoni   |        5000.00 |   30 |
| 106 | virat   |        4000.00 |   20 |
| 107 | rohith  |        3000.00 |   10 |
| 108 | NULL    |           NULL | NULL |
| 109 | abc     |           NULL | NULL |
+-----+---------+----------------+------+
9 rows in set (0.01 sec)


	syntax: alias name for table
	------
	select colum_1,colum_2,...,colum_n from tablename as "aliasname;

			(or)

	select * from tablename as aliasname;

ex2:
---
mysql> select * from emp as e;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | NULL    |    NULL | NULL |
| 109 | abc     |    NULL | NULL |
+-----+---------+---------+------+
9 rows in set (0.00 sec)

how to copy the data from one table to another?
-------------------------------------------------
	if we want to copy the data from one table to another new table,in that case we are using following command

	syntax
	------
	create table new_tablename as select * from existed_tablename;

ex:
---
mysql> create table emp_copy as select * from emp;
Query OK, 9 rows affected (0.13 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> select * from emp_copy;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | NULL    |    NULL | NULL |
| 109 | abc     |    NULL | NULL |
+-----+---------+---------+------+
9 rows in set (0.00 sec)


mysql> show tables;
+-------------------+
| Tables_in_my9amdb |
+-------------------+
| emp               |
| emp_copy          |
+-------------------+
2 rows in set (0.01 sec)



		Operators in SQL:
		-----------------
What is Operator?
-----------------
Operator is a special charecter,which is used to perform the operation on the data of the operands.

	x=10
	y=20

	x + y	--> expression(both combination of both operands and 			Operators)

		--> x and y are operands
		--> + is a operator
		--> 10 and 20 are the data of the Operands

Types of Operators:
-------------------
	Arithmetic Operators
	Comparission/Relational Operators
	Bitwise Operators
	Compound Operators(Shorthand Assignment Operators)
	Logical Operators


Arithmetic Operators:
---------------------
these operators are used to perform the arithmetic calculations.

	Arithmetic	Arithmetic	input's		Result
	   Calculation      Operator    x=10,y=3    
	-----------	-----------	---------	---------
	Addition	    +		x+y		13

	Subtraction	    -		x-y		7

	Multiplication	    *		x*y		30

	division	    /		x/y		3.33335

	Modulo		    %	        x%y		1


ex:
---
mysql> select 10+3,10-3,10*3,10/3,10%3 from dual;
+------+------+------+--------+------+
| 10+3 | 10-3 | 10*3 | 10/3   | 10%3 |
+------+------+------+--------+------+
|   13 |    7 |   30 | 3.3333 |    1 |
+------+------+------+--------+------+
1 row in set (0.01 sec)

ex2:
----
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> select *,esal+1000 as 'increment_by_1000' from emp;
+-----+---------+---------+------+-------------------+
| eid | ename   | esal    | dno  | increment_by_1000 |
+-----+---------+---------+------+-------------------+
| 101 | siva    | 3000.00 |   10 |           4000.00 |
| 102 | rama    | 4000.00 |   20 |           5000.00 |
| 103 | krishna | 5000.00 |   30 |           6000.00 |
| 104 | sachin  | 4000.00 |   10 |           5000.00 |
| 105 | dhoni   | 5000.00 |   30 |           6000.00 |
| 106 | virat   | 4000.00 |   20 |           5000.00 |
| 107 | rohith  | 3000.00 |   10 |           4000.00 |
+-----+---------+---------+------+-------------------+
7 rows in set (0.00 sec)

assignment-1:
-------------
create a emp_new table with esal,annual salary,hike(30%),after_hike(30%)_annual_salary from the emp table?


string concatination:
----------------------
if we want to perform the string concatination to required both inputs are string objects only.

string multiplication:
----------------------
if we want to perform the string multiplication to required minimum one input is integer object.

Comparission/Relational Operators:
----------------------------------
these operators are used to compare the data of the operands.

	= , != or <> , < , <= , > , >=


ex1:
--
mysql> select 10=3,10!=3,10<>3,10<3,10<=3,10>3,10>=3 from dual;
+------+-------+-------+------+-------+------+-------+
| 10=3 | 10!=3 | 10<>3 | 10<3 | 10<=3 | 10>3 | 10>=3 |
+------+-------+-------+------+-------+------+-------+
|    0 |     1 |     1 |    0 |     0 |    1 |     1 |
+------+-------+-------+------+-------+------+-------+
1 row in set (0.01 sec)

note:
-----
in sql,the boolean values are internally treated as boolean values like False means 0 and True means 1

here dual table is a one builtin dummy table in mysql server.

ex2:
----
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> select * from emp where esal=5000;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
+-----+---------+---------+------+
2 rows in set (0.00 sec)

assignment-2:
-------------
create a emp_new_comp table with esal,annual_salary from emp,whose employe annual salary is greater than or equal too 45000?


										DAY-6
									      ---------


assignment-1:
-------------
create a emp_new table with esal,annual salary,hike(30%),after_hike(30%)_annual_salary from the emp table?

sol:
----
mysql> create table emp_new as select esal,esal*12 as "annual_salary",(30/100)*(esal*12) as "hike(30%)",esal*12+(30/100)*(esal*12) as "after_hike(30%)_annual_salary" from emp;

Query OK, 7 rows affected (0.25 sec)
Records: 7  Duplicates: 0  Warnings: 0

mysql> select * from emp_new;
+---------+---------------+--------------+-------------------------------+
| esal    | annual_salary | hike(30%)    | after_hike(30%)_annual_salary |
+---------+---------------+--------------+-------------------------------+
| 3000.00 |      36000.00 | 10800.000000 |                  46800.000000 |
| 4000.00 |      48000.00 | 14400.000000 |                  62400.000000 |
| 5000.00 |      60000.00 | 18000.000000 |                  78000.000000 |
| 4000.00 |      48000.00 | 14400.000000 |                  62400.000000 |
| 5000.00 |      60000.00 | 18000.000000 |                  78000.000000 |
| 4000.00 |      48000.00 | 14400.000000 |                  62400.000000 |
| 3000.00 |      36000.00 | 10800.000000 |                  46800.000000 |
+---------+---------------+--------------+-------------------------------+
7 rows in set (0.00 sec)


assignment-2:
-------------
create a emp_new_comp table with esal,annual_salary from emp,whose employe annual salary is greater than or equal too 45000?

sol:
---
mysql> create table emp_new_comp as select esal,esal*12 as "annual_salary" from emp where esal*12>=45000;

Query OK, 5 rows affected (0.03 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> select * from emp_new_comp;
+---------+---------------+
| esal    | annual_salary |
+---------+---------------+
| 4000.00 |      48000.00 |
| 5000.00 |      60000.00 |
| 4000.00 |      48000.00 |
| 5000.00 |      60000.00 |
| 4000.00 |      48000.00 |
+---------+---------------+
5 rows in set (0.00 sec)


Bitwise operators:
-------------------
the bitwise operators are used to perform the operation on the binary data.

the bitwise operators takes the input as decimal and to return the output as decimal.

the bitwise operators internally to perform the following steps,they are

	step1: to convert decimal into binary
	
	step2: to perform the operation on the binary data

	step3: to convert binary into decimal

the bitwise operators are,

	bitwise and		--> &

	bitwise or		--> |

	bitwise xor		--> ^

	bitwise leftshift	--> <<

	bitwise rightshift	--> >>


ex:
---
mysql> select 10&3,10|3,10^3,10<<3,10>>3 from dual;
+------+------+------+-------+-------+
| 10&3 | 10|3 | 10^3 | 10<<3 | 10>>3 |
+------+------+------+-------+-------+
|    2 |   11 |    9 |    80 |     1 |
+------+------+------+-------+-------+
1 row in set (0.01 sec)


Compound Operators(Shorthand Assignment Operators):
---------------------------------------------------
the assignment operator which contains prefix with any another operator like arithmetic or bitwise operators,that type of assignment operator is called Compound operators.

	ex: x=10

	x+=3		--> x=x+3

	x-=3		--> x=x-3

	x*=3		--> x=x*3

	x&=3		--> x=x&3

	x|=3		--> x=x|3

	.....
	.....


Logical Operators:
-------------------
these operators are used to perform the mathmatical logical operations.

these operators are to return the output as boolean values like True or False.

the Logical operators are 
	and,or,not,all,any,exist,between,like,in,...


What are Clauses in SQL?
-------------------------
Clauses in SQL are similar to conditionals in high-level programming languages.

SQL being a query language requires a method to apply constraints on the data and for this we use Clauses.

	WHERE Clause
	ORDER BY Clause
	HAVING Clause
	GROUP BY Clause
	TOP Clause
	....
	....etc.,


WHERE Clause:
----------------
the WHERE clause allows filtering certain records that exactly match a specified condition.

The WHERE clause is used with SELECT statement as well as with UPDATE, DELETE type statements and aggregate functions to restrict the no. of records to be retrieved by the table. 

We can also use logical or comparison operators such as LIKE,<,>,=, etc.

	syntax
	----------
SELECT Column1,….ColumnN From Table_name WHERE [condition];

	(or)

select * from tablename where condition;

ex1:
----
write a sql query to retreive the employe data from emp table,whoose employe working under department number 10?

mysql> select * from emp where dno=10;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)


ex2:
----
write a sql query to retreive the employe data from emp table,whoose employe working under department number 10,at the same time that employe to get the salary is 3000?

mysql> select * from emp where dno=10 and esal=3000;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
2 rows in set (0.00 sec)


ex3:
----
write a sql query to retreive the employe data from emp table,whoose employe working under department number 10 either which employe to get the salary is 4000?

mysql> select * from emp where dno=10 or esal=4000;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 102 | rama   | 4000.00 |   20 |
| 104 | sachin | 4000.00 |   10 |
| 106 | virat  | 4000.00 |   20 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
5 rows in set (0.00 sec)

ex4:
----
write a sql query to retreive the employe data from emp table,which employe working under except department number 10?

mysql> select * from emp where dno!=10;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
+-----+---------+---------+------+
4 rows in set (0.00 sec)

	(or)

mysql> select * from emp where dno<>10;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
+-----+---------+---------+------+
4 rows in set (0.00 sec)



										DAY-7
									      ---------

ex:
---
write a sql query to retreive the employe data from emp table,whoose employe name endswith charecter 'a'?

mysql> select * from emp where ename like '%a';
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
+-----+---------+---------+------+
3 rows in set (0.01 sec)

ex2:
----
write a sql query to retreive the employe data from emp table,whoose employe name startswith charecter 's'?

mysql> select * from emp where ename like 's%';
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
+-----+--------+---------+------+
2 rows in set (0.00 sec)

ex3:
---
write a sql query to retreive the employe data from emp table,whoose employe name contains 'i' charecter?

mysql> select * from emp where ename like '%i%' ;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
6 rows in set (0.00 sec)

ex4:
---
write a sql query to retreive the employe data from emp table,whoose employe name contains second charecter is 'i'?

mysql> select * from emp where ename like '_i%';
+-----+-------+---------+------+
| eid | ename | esal    | dno  |
+-----+-------+---------+------+
| 101 | siva  | 3000.00 |   10 |
| 106 | virat | 4000.00 |   20 |
+-----+-------+---------+------+
2 rows in set (0.00 sec)

ex5:
---
write a sql query to retreive the employe data from emp table,whoose employe name contains 'i' charecter but except second charecter is 'i'?

mysql> create table emp_char_i as select * from emp where ename like '%i%';
Query OK, 6 rows affected (0.11 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> select * from emp_char_i;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
6 rows in set (0.00 sec)

mysql> select * from emp_char_i where ename not like '_i%';
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
4 rows in set (0.00 sec)


ex6:
----
write a sql query to retreive the employe data from emp table,whoose employe name dont's startswith charecter 's'?

mysql> select * from emp where ename not like 's%';
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
5 rows in set (0.00 sec)

ex7:
----
write a sql query to retreive the employe data from emp table,whoose employe name dont's startswith charecter 's' and dont endswith charecter 'a'?

mysql> select * from emp where ename not like 's%' and ename not like '%a';
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 105 | dhoni  | 5000.00 |   30 |
| 106 | virat  | 4000.00 |   20 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)


ex8:
----
mysql> select * from emp where ename like '%i%' and ename not like '_i%';
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
4 rows in set (0.00 sec)

how to update the data?
-----------------------
if we want to update the data,in that case we are using update command.

	syntax
	------
	update tablename set condition where condition;

ex1:
---
write a sql query to increment the employe salary 500rs from emp table,whoose employe name starts with 's' charecter?

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> update emp set esal=esal+500 where ename like 's%';
Query OK, 2 rows affected (0.02 sec)
Rows matched: 2  Changed: 2  Warnings: 0 

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3500.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4500.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

ex2:
----
write a sql query to decrement the employe salary 600rs from emp table,whoose employe name endswith 'a' charecter and that employe name don't startswith 's' charecter?

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3500.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4500.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> update emp set esal=esal-600 where ename like '%a' and ename not like 's%';
Query OK, 2 rows affected (0.01 sec)
Rows matched: 2  Changed: 2  Warnings: 0

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3500.00 |   10 |
| 102 | rama    | 3400.00 |   20 |
| 103 | krishna | 4400.00 |   30 |
| 104 | sachin  | 4500.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)


assignment-1:
--------------
write a sql query to retreive the student information from the student table,whoose student under CSE department?

assignment-2:
--------------
write a sql query to retreive the student information from the student table,whoose student under IT department and which student to pay above 50000rs?

assignment-3:
-------------
write a sql query to retreive the student information from the student table,whoose student under MECH department and which student to pay above 50000rs and that student name startswith 's' charecter?

ex:
---
write a sql query to get the employe data from emp table whoose employe working under deptartment number 10 either which employe to get the salary is greaterthan or equal to 4000 at the same time which employe name starstwith 'r' charecter?

mysql> select * from emp where (dno=10 or esal>=4000) and ename like 'r%';
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
1 row in set (0.00 sec)


										DAY-8
									      ---------



ex1:
----
write a sql query,to retreive the employe data from emp table,whoose employe to get the salary between 3500 and 4500?

mysql> select * from emp where esal between 3500 and 4500;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3500.00 |   10 |
| 103 | krishna | 4400.00 |   30 |
| 104 | sachin  | 4500.00 |   10 |
| 106 | virat   | 4000.00 |   20 |
+-----+---------+---------+------+
4 rows in set (0.01 sec)

ex2:
----
write a sql query,to retreive the employe data from emp table,whoose employe to get the salary not between 3500 and 4500?

mysql> select * from emp where esal not between 3500 and 4500;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 102 | rama   | 3400.00 |   20 |
| 105 | dhoni  | 5000.00 |   30 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.01 sec)

ex3:
----
write a sql query,to retreive the employe data from emp table,whoose employe to get the salary not between 3500 and 4500 and which employe name dont starts with 'r' charecter?

mysql> select * from emp where esal not between 3500 and 4500 and ename not like 'r%';
+-----+-------+---------+------+
| eid | ename | esal    | dno  |
+-----+-------+---------+------+
| 105 | dhoni | 5000.00 |   30 |
+-----+-------+---------+------+
1 row in set (0.01 sec)

ex4:
---
write a sql query,to retreive the employe data from emp table,whoose employe to get the salary in 3500 , 4500?

mysql> select * from emp where esal=3500 or esal=4500;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3500.00 |   10 |
| 104 | sachin | 4500.00 |   10 |
+-----+--------+---------+------+
2 rows in set (0.00 sec)

	(or)

mysql> select * from emp where esal in (3500,4500);
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3500.00 |   10 |
| 104 | sachin | 4500.00 |   10 |
+-----+--------+---------+------+
2 rows in set (0.01 sec)

ex5:
---
write a sql query,to retreive the employe data from emp table,whoose employe to get the salary not in 3500 , 4500?

mysql> select * from emp where esal not in (3500,4500);
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 3400.00 |   20 |
| 103 | krishna | 4400.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
5 rows in set (0.00 sec)

how to delete the data from the table?
---------------------------------------
	if we want to delete the data from the table,in that case we are using delete command.

	syntax
	------
	delete from tablename where condition;

ex1:
---
write a sql query to delete the employe data from the emp table,whoose employe to get the salary is 5000?

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3500.00 |   10 |
| 102 | rama    | 3400.00 |   20 |
| 103 | krishna | 4400.00 |   30 |
| 104 | sachin  | 4500.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> delete from emp where esal=5000;
Query OK, 1 row affected (0.03 sec)

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3500.00 |   10 |
| 102 | rama    | 3400.00 |   20 |
| 103 | krishna | 4400.00 |   30 |
| 104 | sachin  | 4500.00 |   10 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
6 rows in set (0.00 sec)

ex2:
---
write a sql query to delete the employe data from the emp table,whoose employe working under department number 10 and which employe name startswith 's' charecter?

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3500.00 |   10 |
| 102 | rama    | 3400.00 |   20 |
| 103 | krishna | 4400.00 |   30 |
| 104 | sachin  | 4500.00 |   10 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
6 rows in set (0.00 sec)

mysql> delete from emp where dno=10 and ename like 's%';
Query OK, 2 rows affected (0.01 sec)

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 3400.00 |   20 |
| 103 | krishna | 4400.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
4 rows in set (0.00 sec)

ex3:
---
write a sql query to delete all the employes data from the emp table?

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 3400.00 |   20 |
| 103 | krishna | 4400.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
4 rows in set (0.00 sec)

mysql> delete from emp;
Query OK, 4 rows affected (0.01 sec)

mysql> select * from emp;
Empty set (0.00 sec)

order by clause:
-----------------
the "order by" clause is used to ordering the records i.e., to print the records either ascending order or descending order based on conditions.

	syntax
	------
	select * from emp order by columnname ordertype;
						  |
					----------------------
					|		     |
				       asc		    desc
				(it's by default)

ex1:
----
write a sql query to print the employe data from emp table in ascending order based on employe salary?

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)


mysql> select * from emp order by esal;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 107 | rohith  | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 104 | sachin  | 4000.00 |   10 |
| 106 | virat   | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

	(or)

mysql> select * from emp order by esal asc;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 107 | rohith  | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 104 | sachin  | 4000.00 |   10 |
| 106 | virat   | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)


ex2:
----
write a sql query to print the employe data from emp table in descending order based on employe names?

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> select * from emp order by ename desc;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 106 | virat   | 4000.00 |   20 |
| 101 | siva    | 3000.00 |   10 |
| 104 | sachin  | 4000.00 |   10 |
| 107 | rohith  | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
+-----+---------+---------+------+
7 rows in set (0.01 sec)


	syntax
	------
    select * from tablename where condition order by columnname ordertype;

ex3:
----
write a sql query to print the employe data from emp table in ascending order based on employe names whoose employe working under department number 10?

mysql> select * from emp where dno=10;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)

mysql> select * from emp where dno=10 order by ename;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 107 | rohith | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 101 | siva   | 3000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)


										DAY-9
									      --------

GROUP BY Clause
----------------
The GROUP BY clause is used to group rows that have the same values in the result set.

This clause is generally used with aggregate functions that allow grouping the query result rows by multiple columns. 

The aggregate functions are COUNT, MAX, MIN, SUM, AVG, etc.

	syntax1:
	-------
select column,aggrigate function(column) from tablename group by column_name;

ex1:
----
write a sql query to perform the aggrigate function on emp table?

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.08 sec)

mysql> select count(*),min(esal),max(esal),sum(esal),avg(esal) from emp;
+----------+-----------+-----------+-----------+-------------+
| count(*) | min(esal) | max(esal) | sum(esal) | avg(esal)   |
+----------+-----------+-----------+-----------+-------------+
|        7 |   3000.00 |   5000.00 |  28000.00 | 4000.000000 |
+----------+-----------+-----------+-----------+-------------+
1 row in set (0.00 sec)

ex2:
---
write a sql query to return how many no.of employes working under each and every department from the emp table?

mysql> select dno,count(dno) from emp group by dno;
+------+------------+
| dno  | count(dno) |
+------+------------+
|   10 |          3 |
|   20 |          2 |
|   30 |          2 |
+------+------------+
3 rows in set (0.02 sec)

	(or)

mysql> select dno,count(*) from emp group by dno;
+------+----------+
| dno  | count(*) |
+------+----------+
|   10 |        3 |
|   20 |        2 |
|   30 |        2 |
+------+----------+
3 rows in set (0.00 sec)

ex3:
----
write a sql query to return the how many no.of employees to get the same salary from the emp table?

mysql> select esal,count(*) from emp group by esal;
+---------+----------+
| esal    | count(*) |
+---------+----------+
| 3000.00 |        2 |
| 4000.00 |        3 |
| 5000.00 |        2 |
+---------+----------+
3 rows in set (0.00 sec)


	syntax2
	-------
select column,aggrigatefunction(column) from tablename where condition group by column;

ex1:
---
write a sql query to print the how many no.of employees to get the salary is greaterthan 3000 department wise?

mysql> select dno,count(*) from emp where esal>3000 group by dno;
+------+----------+
| dno  | count(*) |
+------+----------+
|   20 |        2 |
|   30 |        2 |
|   10 |        1 |
+------+----------+
3 rows in set (0.00 sec)

	syntax3
	-------
select column,aggrigatefunction(column) from tablename where condition group by column order by column ordertype;

ex1:
---
write a sql query to print the how many no.of employees to get the salary is greaterthan 3000 department wise in ascending order based on department number?

mysql> select dno,count(*) from emp where esal>3000 group by dno;
+------+----------+
| dno  | count(*) |
+------+----------+
|   20 |        2 |
|   30 |        2 |
|   10 |        1 |
+------+----------+
3 rows in set (0.00 sec)

mysql> select dno,count(*) from emp where esal>3000 group by dno order by dno;
+------+----------+
| dno  | count(*) |
+------+----------+
|   10 |        1 |
|   20 |        2 |
|   30 |        2 |
+------+----------+
3 rows in set (0.01 sec)


ex2:
----
write a sql query to print the how many no.of employees to get the salary is greaterthan 3000 department wise in descending order based on department number?

mysql> select dno,count(*) from emp where esal>3000 group by dno;
+------+----------+
| dno  | count(*) |
+------+----------+
|   20 |        2 |
|   30 |        2 |
|   10 |        1 |
+------+----------+
3 rows in set (0.00 sec)

mysql> select dno,count(*) from emp where esal>3000 group by dno order by dno desc;
+------+----------+
| dno  | count(*) |
+------+----------+
|   30 |        2 |
|   20 |        2 |
|   10 |        1 |
+------+----------+
3 rows in set (0.00 sec)


HAVING Clause
--------------
Actually, this clause is introduced to apply functions in the query with the WHERE clause.

In SQL, the HAVING clause was added because the WHERE clause could not be applied with aggregate functions.

We can also use the HAVING clause with logical operators such as OR and AND.

	syntax
	---------
SELECT Column FROM Table WHERE condition GROUP BY Column HAVING condition [ORDER BY Column];


ex1:
----
write a sql query to print the how many no.of employees to get the salary is greaterthan 3000 department wise and that employe count is minimum 2?

mysql> select dno from emp where esal>3000;
+------+
| dno  |
+------+
|   20 |
|   30 |
|   10 |
|   30 |
|   20 |
+------+
5 rows in set (0.00 sec)

mysql> select dno,count(dno) from emp where esal>3000 group by dno;
+------+------------+
| dno  | count(dno) |
+------+------------+
|   20 |          2 |
|   30 |          2 |
|   10 |          1 |
+------+------------+
3 rows in set (0.00 sec)

mysql> select dno,count(dno) from emp where esal>3000 group by dno having count(dno)>=2;
+------+------------+
| dno  | count(dno) |
+------+------------+
|   20 |          2 |
|   30 |          2 |
+------+------------+
2 rows in set (0.00 sec)

ex2:
----
write a sql query to print the how many no.of employees to get the salary is greaterthan 3000 department wise and that employe count is minimum 2 in descending order based on department number?

mysql> select dno,count(dno) from emp where esal>3000 group by dno having count(dno)>=2 order by dno desc;
+------+------------+
| dno  | count(dno) |
+------+------------+
|   30 |          2 |
|   20 |          2 |
+------+------------+
2 rows in set (0.00 sec)


										       DAY-10
										      --------


TOP/LIMIT Clause:
-----------------
The TOP/LIMIT clause is used to determine the number of records/rows to be shown in the result.
 
This TOP/LIMIT clause is used with SELECT statement specially implemented on large tables with many records But the clause is not supported in many database systems, like MySQL supports the LIMIT clause to select limited no. of rows and in Oracle ROWNUM is used.

	Syntax in MySQL:
	----------------
	SELECT ColumnName(s) FROM TableName WHERE condition LIMIT no;

ex1:
----
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.02 sec)

mysql> select * from emp where esal>4000 limit 1;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 103 | krishna | 5000.00 |   30 |
+-----+---------+---------+------+
1 row in set (0.00 sec)

mysql> select * from emp where esal>4000 limit 2;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
+-----+---------+---------+------+
2 rows in set (0.00 sec)

mysql> select * from emp where esal>3000 limit 1;
+-----+-------+---------+------+
| eid | ename | esal    | dno  |
+-----+-------+---------+------+
| 102 | rama  | 4000.00 |   20 |
+-----+-------+---------+------+
1 row in set (0.00 sec)

mysql> select * from emp where esal>3000 order by esal desc limit 1;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 103 | krishna | 5000.00 |   30 |
+-----+---------+---------+------+
1 row in set (0.01 sec)

mysql> select * from emp limit 1;
+-----+-------+---------+------+
| eid | ename | esal    | dno  |
+-----+-------+---------+------+
| 101 | siva  | 3000.00 |   10 |
+-----+-------+---------+------+
1 row in set (0.00 sec)

mysql> select * from emp limit 2;
+-----+-------+---------+------+
| eid | ename | esal    | dno  |
+-----+-------+---------+------+
| 101 | siva  | 3000.00 |   10 |
| 102 | rama  | 4000.00 |   20 |
+-----+-------+---------+------+
2 rows in set (0.00 sec)


What is TCL?
------------
TCL(Transaction Control Languages), the TCL commands are used to controls and manages the Transactions.

what is Transaction?
--------------------
A Transaction is a execute the series of sql commands,considering them a single unit of work.

the TCL commands are commit,rollback,savepoint

Transactions are used to ensure data integrity and consistency in a multi-user environment where multiple users or applications can access and modify the database concurrently.


Features of Transaction(ACID Properties)
-----------------------
Atomic/Atomicity: It ensures that all statements combined in a transaction are executed as a single unit of work.
 
Consistent: It ensures that the database's integrity is in a consistent state and remains the same before and after the transaction.
 
Isolation: Concurrent transactions occur simultaneously without being affected by each other. One transaction cannot affect another.
 
Durability: The changes after the execution of a transaction become permanent. Alternatively, the effects of the transaction are permanent. 


COMMIT command
--------------
When we make changes in the database using the DML(Insert,Delete,Update) commands, it's important to save them, in that case we are using "commit" command.

Once we commit in the database, we cannot change it back to the previous state (we cannot ROLLBACK).

	Syntax: 
		COMMIT;  or commit;

note:
----
in mysql server,by default all commands like DDL,DML are autocommited.

ROLLBACK command:
-----------------
What if we want to undo the changes made by the DML commands,In that case, we are using ROLLBACK command. 

This command undoes the changes made by DML statements,Only those changes would be ‘undo’ed before the last COMMIT was issued/executed. 

	Syntax:
		ROLLBACK;

		(OR)

	 	ROLLBACK to savepoint_name; 

SAVEPOINT command:
------------------
this command creates a savepoint within a transaction that allows partial rollbacks.

A savepoint is a point we can roll back to without undoing all the changes made since the start of the transaction.

	Syntax
	------
	SAVEPOINT savepoint_name;

ex1:
----
mysql> set autocommit=false;
Query OK, 0 rows affected (0.02 sec)

ex2:
----
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)


mysql> update emp set esal=esal+500 where ename not like 's%';
Query OK, 5 rows affected (0.02 sec)
Rows matched: 5  Changed: 5  Warnings: 0

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4500.00 |   20 |
| 103 | krishna | 5500.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5500.00 |   30 |
| 106 | virat   | 4500.00 |   20 |
| 107 | rohith  | 3500.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)


mysql> rollback;
Query OK, 0 rows affected (0.01 sec)

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

ex3:
----
mysql> select * from emp where dno=10;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)

mysql> update emp set esal=esal+500 where dno=10 and ename not like 's%';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from emp where dno=10;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 3500.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)

mysql> savepoint s1;
Query OK, 0 rows affected (0.01 sec)

mysql> update emp set esal=esal+500 where dno=10 and ename not like 's%';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from emp where dno=10;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 4000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)

mysql> savepoint s2;
Query OK, 0 rows affected (0.00 sec)

mysql> rollback to s2;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp where dno=10;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 4000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)

mysql> rollback to s1;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp where dno=10;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 3500.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)

mysql> rollback;
Query OK, 0 rows affected (0.01 sec)

mysql> select * from emp where dno=10;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.00 sec)


										DAY-11
									       --------
ex1:
----
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.01 sec)

mysql> set autocommit=false;
Query OK, 0 rows affected (0.01 sec)

mysql> delete from emp where ename like 's%';
Query OK, 2 rows affected (0.02 sec)

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
5 rows in set (0.00 sec)

mysql> rollback;
Query OK, 0 rows affected (0.01 sec)


mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> delete from emp where ename like 's%';
Query OK, 2 rows affected (0.01 sec)

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
5 rows in set (0.00 sec)

mysql> commit;
Query OK, 0 rows affected (0.02 sec)

mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
5 rows in set (0.00 sec)

note:
-----
once we can commit the transaction,we can't rollback the data.


SQL constraints:
-----------------
SQL constraints are a set of rules implemented on tables in relational databases to dictate what data can be inserted, updated or deleted in its tables.

the Constraints are used to maintain the data integrity and accuracy in the table.

the Constraints can be categorized into 2-types,they are

1).column level constraints:
	Not Null Constraint
	Check Constraint
	Default Constraint
	Unique Constraint
	Primary key Constraint

2).table level constraints:
	Foreign key reference Constraint

Not Null Constraint:
---------------------
A Not Null constraint restricts the insertion of null values into that particular column.

	syntax
	------
	create table tablename(columname datatype(size) not null,
			       columnname datatype(size),
					....
			       columnname datatype(size));


ex:
----
mysql> create table student(sid int not null,sname char(20));
Query OK, 0 rows affected (0.12 sec)

mysql> desc student;
+-------+----------+------+-----+---------+-------+
| Field | Type     | Null | Key | Default | Extra |
+-------+----------+------+-----+---------+-------+
| sid   | int      | NO   |     | NULL    |       |
| sname | char(20) | YES  |     | NULL    |       |
+-------+----------+------+-----+---------+-------+
2 rows in set (0.04 sec)

mysql> insert into student values(101,'siva');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student values(102,null);
Query OK, 1 row affected (0.00 sec)

mysql> insert into student values(null,'rama');
ERROR 1048 (23000): Column 'sid' cannot be null

mysql> insert into student values(102,'rama');
Query OK, 1 row affected (0.00 sec)

mysql> select * from student;
+-----+-------+
| sid | sname |
+-----+-------+
| 101 | siva  |
| 102 | NULL  |
| 102 | rama  |
+-----+-------+
3 rows in set (0.00 sec)

mysql> insert into student(sid) values(103);
Query OK, 1 row affected (0.00 sec)

mysql> insert into student(sname) values('krishna');
ERROR 1364 (HY000): Field 'sid' doesn't have a default value

mysql> select * from student;
+-----+-------+
| sid | sname |
+-----+-------+
| 101 | siva  |
| 102 | NULL  |
| 102 | rama  |
| 103 | NULL  |
+-----+-------+
4 rows in set (0.00 sec)

Check Constraint:
-------------------
A Check constraint checks for a specific condition before inserting data into a table.

	syntax
	-------
	create table tablename(colname datatype(size) check(condition),
			       colname datatype(size),
					.....
					.....
				colname datatype(size));

ex:
----
mysql> create table student(sid int,sname char(20),sfee decimal(6,2) check(sfee>=5000));
Query OK, 0 rows affected (0.04 sec)

mysql> desc student;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| sid   | int          | YES  |     | NULL    |       |
| sname | char(20)     | YES  |     | NULL    |       |
| sfee  | decimal(6,2) | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> insert into student values(101,'siva',6000);
Query OK, 1 row affected (0.00 sec)

mysql> insert into student values(101,'rama',7000);
Query OK, 1 row affected (0.00 sec)

mysql> insert into student values(102,'siva',5000);
Query OK, 1 row affected (0.00 sec)

mysql> insert into student values(103,'krishna',4999);
ERROR 3819 (HY000): Check constraint 'student_chk_1' is violated.

mysql> insert into student(sfee) values(5001);
Query OK, 1 row affected (0.00 sec)

mysql> insert into student(sfee) values(10000);
ERROR 1264 (22003): Out of range value for column 'sfee' at row 1

mysql> select * from student;
+------+-------+---------+
| sid  | sname | sfee    |
+------+-------+---------+
|  101 | siva  | 6000.00 |
|  101 | rama  | 7000.00 |
|  102 | siva  | 5000.00 |
| NULL | NULL  | 5001.00 |
+------+-------+---------+
4 rows in set (0.00 sec)


										DAY-12
									       --------


Default Constraint
------------------
Specifies a default value when a value is not specified for this column.

If in an insertion query any value is not specified for this column then the default value will be inserted into the column.

	syntax
	------
	create table tablename(col_name datatype(size) default value,
			       col_name datatype(size),
					.....
					.....
				col_name datatype(size));

ex:
---
mysql> create table student(sid int,sname char(20),email char(40) default "No-Email");
Query OK, 0 rows affected (0.04 sec)

mysql> desc student;
+-------+----------+------+-----+----------+-------+
| Field | Type     | Null | Key | Default  | Extra |
+-------+----------+------+-----+----------+-------+
| sid   | int      | YES  |     | NULL     |       |
| sname | char(20) | YES  |     | NULL     |       |
| email | char(40) | YES  |     | No-Email |       |
+-------+----------+------+-----+----------+-------+
3 rows in set (0.04 sec)

mysql> insert into student values(101,'siva','siva@gmail.com');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student values(101,'rama','rama@gmail.com');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student values(102,'rama','rama@gmail.com');
Query OK, 1 row affected (0.00 sec)

mysql> insert into student(email) values('krishna@gmail.com');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student(sid,sname) values(103,'sachin');
Query OK, 1 row affected (0.01 sec)

mysql> select * from student;
+------+--------+-------------------+
| sid  | sname  | email             |
+------+--------+-------------------+
|  101 | siva   | siva@gmail.com    |
|  101 | rama   | rama@gmail.com    |
|  102 | rama   | rama@gmail.com    |
| NULL | NULL   | krishna@gmail.com |
|  103 | sachin | No-Email          |
+------+--------+-------------------+
5 rows in set (0.00 sec)


Unique Constraint:
-------------------
It ensures that each row for a column must have a unique value.

It is like a Primary key but it can accept null value.

In a table, one or more columns can contain a Unique Constraint.


	syntax
	------
	create table tablename(col_name datatype(size) unique,
			       col_name datatype(size),
				     ......
				     ......
				col_name datatype(size));


ex:
----
mysql> create table student(sid int unique,sname char(20));
Query OK, 0 rows affected (0.03 sec)

mysql> desc student;
+-------+----------+------+-----+---------+-------+
| Field | Type     | Null | Key | Default | Extra |
+-------+----------+------+-----+---------+-------+
| sid   | int      | YES  | UNI | NULL    |       |
| sname | char(20) | YES  |     | NULL    |       |
+-------+----------+------+-----+---------+-------+
2 rows in set (0.01 sec)

mysql> insert into student values(101,'siva');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student values(102,'siva');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student values(102,'rama');
ERROR 1062 (23000): Duplicate entry '102' for key 'student.sid'

mysql> insert into student(sname) values('rama');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student(sid,sname) values(103,'krishna');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student(sname) values('sachin');
Query OK, 1 row affected (0.01 sec)

mysql> select * from student;
+------+---------+
| sid  | sname   |
+------+---------+
|  101 | siva    |
|  102 | siva    |
| NULL | rama    |
|  103 | krishna |
| NULL | sachin  |
+------+---------+
5 rows in set (0.00 sec)


note:
-----
every null/NULL is internally associated one unique value.

Primary key constraint:
------------------------
A Primary key(unique + not null) uniquely identifies each row in a table.

It cannot accept null and duplicate data.

One or more of the columns of a table can contain a Primary key.


	syntax
	------
	create table tablename(col_name datatype(size) primary key,
			       col_name datatype(size),
				      .....
				      .....
			       col_name datatype(size));

ex:
---
mysql> create table student(sid int primary key,sname char(20));
Query OK, 0 rows affected (0.03 sec)

mysql> desc student;
+-------+----------+------+-----+---------+-------+
| Field | Type     | Null | Key | Default | Extra |
+-------+----------+------+-----+---------+-------+
| sid   | int      | NO   | PRI | NULL    |       |
| sname | char(20) | YES  |     | NULL    |       |
+-------+----------+------+-----+---------+-------+
2 rows in set (0.00 sec)

mysql> insert into student values(101,'rama');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student values(102,'krishna');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student values(102,'sachin');
ERROR 1062 (23000): Duplicate entry '102' for key 'student.PRIMARY'

mysql> insert into student values(103,'krishna');
Query OK, 1 row affected (0.01 sec)

mysql> insert into student(sname) values('sachin');
ERROR 1364 (HY000): Field 'sid' doesn't have a default value

mysql> insert into student values(NULL,'virat');
ERROR 1048 (23000): Column 'sid' cannot be null

mysql> select * from student;
+-----+---------+
| sid | sname   |
+-----+---------+
| 101 | rama    |
| 102 | krishna |
| 103 | krishna |
+-----+---------+
3 rows in set (0.00 sec)

ex2:
----
mysql> create table student(sid int unique not null,sname char(20));
Query OK, 0 rows affected (0.03 sec)

mysql> desc student;
+-------+----------+------+-----+---------+-------+
| Field | Type     | Null | Key | Default | Extra |
+-------+----------+------+-----+---------+-------+
| sid   | int      | NO   | PRI | NULL    |       |
| sname | char(20) | YES  |     | NULL    |       |
+-------+----------+------+-----+---------+-------+
2 rows in set (0.01 sec)


assignmment:
-------------
write a sql query,to create a customer table with cid,cname,cadd,payment,
cemail fields/columns.

	--> cid's are must be unique and dont allow the null values
	--> cname's are must be unique but it allows null values
	--> cadd having default address is 'hyd'
	--> payment must be 7 digits after decimal 2 digits and it allows payment is greaterthan or equal to 10000.

	

										DAY-13
									      ----------


assignmment:
-------------
write a sql query,to create a customer table with cid,cname,cadd,payment,
cemail fields/columns.

	--> cid's are must be unique and dont allow the null values
	--> cname's are must be unique but it allows null values
	--> cadd having default address is 'hyd'
	--> payment must be 7 digits after decimal 2 digits and it allows payment is greaterthan or equal to 10000.

sol:
----
mysql> create table customer(cid int primary key,cname char(20) unique,cadd char(30) default 'hyd',payment decimal(7,2) check(payment>=10000),cemail char(30));

Query OK, 0 rows affected (0.21 sec)

mysql> desc customer;
+---------+--------------+------+-----+---------+-------+
| Field   | Type         | Null | Key | Default | Extra |
+---------+--------------+------+-----+---------+-------+
| cid     | int          | NO   | PRI | NULL    |       |
| cname   | char(20)     | YES  | UNI | NULL    |       |
| cadd    | char(30)     | YES  |     | hyd     |       |
| payment | decimal(7,2) | YES  |     | NULL    |       |
| cemail  | char(30)     | YES  |     | NULL    |       |
+---------+--------------+------+-----+---------+-------+
5 rows in set (0.04 sec)

mysql> insert into customer values(101,'siva','pune',10000,'siva@gmail.com');
Query OK, 1 row affected (0.02 sec)

mysql> insert into customer values(102,'siva','pune',11000,'siva@gmail.com');
ERROR 1062 (23000): Duplicate entry 'siva' for key 'customer.cname'

mysql> insert into customer values(102,'rama','pune',11000,'siva@gmail.com');
Query OK, 1 row affected (0.01 sec)

mysql> insert into customer values(102,'krishna','pune',11000,'krishna@gmail.com');

ERROR 1062 (23000): Duplicate entry '102' for key 'customer.PRIMARY'

mysql> insert into customer values
(103,'krishna','pune',9000,'krishna@gmail.com');
ERROR 3819 (HY000): Check constraint 'customer_chk_1' is violated.

mysql> insert into customer values(103,'krishna','pune',100000,'krishna@gmail.com');
ERROR 1264 (22003): Out of range value for column 'payment' at row 1

mysql> insert into customer(cid) values(104);
Query OK, 1 row affected (0.01 sec)

mysql> select * from customer;
+-----+-------+------+----------+----------------+
| cid | cname | cadd | payment  | cemail         |
+-----+-------+------+----------+----------------+
| 101 | siva  | pune | 10000.00 | siva@gmail.com |
| 102 | rama  | pune | 11000.00 | siva@gmail.com |
| 104 | NULL  | hyd  |     NULL | NULL           |
+-----+-------+------+----------+----------------+
3 rows in set (0.00 sec)


FOREIGN KEY Constraint:
-----------------------
the FOREIGN KEY constraint is used to create a relationship between two tables.

A foreign key is defined using the FOREIGN KEY and REFERENCES keywords.

syntax:
-------
CREATE TABLE table_name(
    column1 data_type,    			
    column2 data_type,
    ...,
    FOREIGN KEY (column_name)
    REFERENCES referenced_table_name (referenced_column_name));


ex:
----
mysql> create table dept(dno int primary key,dname char(10),dloc char(20));
Query OK, 0 rows affected (0.03 sec)

mysql> desc dept;
+-------+----------+------+-----+---------+-------+
| Field | Type     | Null | Key | Default | Extra |
+-------+----------+------+-----+---------+-------+
| dno   | int      | NO   | PRI | NULL    |       |
| dname | char(10) | YES  |     | NULL    |       |
| dloc  | char(20) | YES  |     | NULL    |       |
+-------+----------+------+-----+---------+-------+
3 rows in set (0.01 sec)

mysql> create table emp(eid int primary key,ename char(20),esal decimal(6,2),dno int,FOREIGN KEY(dno) REFERENCES dept(dno));

Query OK, 0 rows affected (0.04 sec)

mysql> desc emp;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| eid   | int          | NO   | PRI | NULL    |       |
| ename | char(20)     | YES  |     | NULL    |       |
| esal  | decimal(6,2) | YES  |     | NULL    |       |
| dno   | int          | YES  | MUL | NULL    |       |
+-------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

ex2: insert the data into dept table
----
mysql> insert into dept values(10,'admin','hyd');
Query OK, 1 row affected (0.01 sec)

mysql> insert into dept values(20,'hr','pune');
Query OK, 1 row affected (0.01 sec)

mysql> insert into dept values(30,'R&D','chennai');
Query OK, 1 row affected (0.01 sec)

mysql> select * from dept;
+-----+-------+---------+
| dno | dname | dloc    |
+-----+-------+---------+
|  10 | admin | hyd     |
|  20 | hr    | pune    |
|  30 | R&D   | chennai |
+-----+-------+---------+
3 rows in set (0.01 sec)

ex3: insert the data into emp table
----
mysql> insert into emp values(101,'siva',3000,10);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp values(102,'rama',4000,20);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp values(103,'krishna',5000,10);
Query OK, 1 row affected (0.01 sec)

mysql> insert into emp values(104,'sachin',4000,40);

ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`my9amdb`.`emp`, CONSTRAINT `emp_ibfk_1` FOREIGN KEY (`dno`) REFERENCES `dept` (`dno`))

mysql> insert into emp values(104,'sachin',4000,30);
Query OK, 1 row affected (0.01 sec)

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   10 |
| 104 | sachin  | 4000.00 |   30 |
+-----+---------+---------+------+
4 rows in set (0.00 sec)

ex4: delete the data
----
mysql> delete from emp where dno=10;
Query OK, 2 rows affected (0.01 sec)

mysql> select * from emp;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 102 | rama   | 4000.00 |   20 |
| 104 | sachin | 4000.00 |   30 |
+-----+--------+---------+------+
2 rows in set (0.00 sec)

mysql> select * from dept;
+-----+-------+---------+
| dno | dname | dloc    |
+-----+-------+---------+
|  10 | admin | hyd     |
|  20 | hr    | pune    |
|  30 | R&D   | chennai |
+-----+-------+---------+
3 rows in set (0.00 sec)

mysql> delete from dept where dno=10;
Query OK, 1 row affected (0.01 sec)

mysql> select * from dept;
+-----+-------+---------+
| dno | dname | dloc    |
+-----+-------+---------+
|  20 | hr    | pune    |
|  30 | R&D   | chennai |
+-----+-------+---------+
2 rows in set (0.00 sec)

mysql> delete from dept where dno=20;
ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails (`my9amdb`.`emp`, CONSTRAINT `emp_ibfk_1` FOREIGN KEY (`dno`) REFERENCES `dept` (`dno`))


									DAY-14
								       --------


Note:
-----
The foreign key can be referenced to any column in the parent table.However, it is a general practice to reference the foreign key to the primary key of the parent table.

Why use Foreign Key?
-------------------
To Normalize the Data:
	The FOREIGN KEY constraint helps us to normalize data in multiple tables and to reduce the data redundancy.

To Prevent Wrong Data From Insertion:
	If two database tables are related through a field (attribute), using FOREIGN KEY makes sure that wrong data is not inserted in that field. This helps eliminate bugs at the database level.


Multiple Foreign Keys in a Table:
------------------------------------
A database table can also have multiple foreign keys.

ex:
---
CREATE TABLE Users(
  id INT PRIMARY KEY,
  first_name VARCHAR(40),
  last_name VARCHAR(40),
  age INT,
  country VARCHAR(10)
);

--> add foreign key to buyer and seller fields
--> foreign key references the id field of the Users table

CREATE TABLE Transactions (
  transaction_id INT PRIMARY KEY,
  amount INT,
  seller INT,
  buyer INT,
  CONSTRAINT fk_seller FOREIGN KEY (seller) REFERENCES Users(id),
  CONSTRAINT fk_buyer FOREIGN KEY (buyer) REFERENCES Users(id)
);


Working with Aggrigate functions:
---------------------------------
the aggrigate functions to return result as single value.

the aggrigate functions are count(),min(),max(),sum(),avg(),...

count():
-------
to return the no.of records/rows in a table.

	syntax
	------
	count(*)  or  count(columnname)

ex1:
----
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> select count(*) from emp;
+----------+
| count(*) |
+----------+
|        7 |
+----------+
1 row in set (0.00 sec)

mysql> select count(esal) from emp;
+-------------+
| count(esal) |
+-------------+
|           7 |
+-------------+
1 row in set (0.00 sec)

min()
-----
to return the minimum value from the given column.

	syntax
	------
	min(columnname)

ex:
---
mysql> select min(esal) from emp;
+-----------+
| min(esal) |
+-----------+
|   3000.00 |
+-----------+
1 row in set (0.00 sec)

mysql> select min(dno) from emp;
+----------+
| min(dno) |
+----------+
|       10 |
+----------+
1 row in set (0.00 sec)

mysql> select min(ename) from emp;
+------------+
| min(ename) |
+------------+
| dhoni      |
+------------+
1 row in set (0.01 sec)

max()
------
to return the maximum values from the given column.

	syntax
	------
	max(columnname)

ex:
---
mysql> select max(esal) from emp;
+-----------+
| max(esal) |
+-----------+
|   5000.00 |
+-----------+
1 row in set (0.00 sec)

mysql> select max(dno) from emp;
+----------+
| max(dno) |
+----------+
|       30 |
+----------+
1 row in set (0.00 sec)

mysql> select max(ename) from emp;
+------------+
| max(ename) |
+------------+
| virat      |
+------------+
1 row in set (0.00 sec)

sum()
-----
to return the sum of the given column values.

	syntax
	------
	sum(columnname)

ex:
---
mysql> select sum(esal) from emp;
+-----------+
| sum(esal) |
+-----------+
|  28000.00 |
+-----------+
1 row in set (0.00 sec)

mysql> select sum(dno) from emp;
+----------+
| sum(dno) |
+----------+
|      130 |
+----------+
1 row in set (0.00 sec)

avg()
-----
to return the average value of the given column.

	syntax
	------
	avg(columnname)

ex:
---
mysql> select avg(esal) from emp;
+-------------+
| avg(esal)   |
+-------------+
| 4000.000000 |
+-------------+
1 row in set (0.00 sec)

mysql> select avg(dno) from emp;
+----------+
| avg(dno) |
+----------+
|  18.5714 |
+----------+
1 row in set (0.00 sec)

ex:
---
mysql> select count(*) as 'total_no_of_employees',min(esal) as 'min_sal',max(esal) as 'max_sal',sum(esal) as 'total_sal',avg(esal) as 'avg_sal' from emp;

+-----------------------+---------+---------+-----------+-------------+
| total_no_of_employees | min_sal | max_sal | total_sal | avg_sal     |
+-----------------------+---------+---------+-----------+-------------+
|                     7 | 3000.00 | 5000.00 |  28000.00 | 4000.000000 |
+-----------------------+---------+---------+-----------+-------------+
1 row in set (0.00 sec)

what is SubQuery?
------------------
the SubQuery means we can write an sql query inside another sql query.

	syntax
	------
	select * from tablename where condition(select * from tablename);
	--------------------------------------- ------------------------
		|				        |
	     outer query 			   inner query


the inner query result is passing to input to the outer query i.e., outer query result is depends on inner query result.

ex1:
----
write a sql query to get the employe data from emp table whoose employe to get the maximum salary?

mysql> select * from emp where esal=(select max(esal) from emp);
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 103 | krishna | 5000.00 |   30 |
| 105 | dhoni   | 5000.00 |   30 |
+-----+---------+---------+------+
2 rows in set (0.01 sec)


ex2:
----
write a sql query to get the employe data from emp table whoose employe to get the minimum salary?

mysql> select * from emp where esal=(select min(esal) from emp);
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
2 rows in set (0.00 sec)

ex3:
----
write a sql query to get the employe data from emp table whoose employe to get the maximum salary and that employe working under department number 10?

mysql> select * from emp where dno=10 and esal=(select max(esal) from emp where dno=10);
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 104 | sachin | 4000.00 |   10 |
+-----+--------+---------+------+
1 row in set (0.00 sec)


										DAY-15
									       --------


string functions in SQL:
------------------------
ASCII()
-------
ASCII() to return the ASCII value of the given character 
	
	syntax
	------
	ASCII(single_character)

		(or)

	ASCII(string) --> only first charecter ASCII value

ex:
---
mysql> select ascii('a') as 'a',ascii('A') as 'A',ascii('@') as '@',ascii('9') as '9' from dual;
+----+----+----+----+
| a  | A  | @  | 9  |
+----+----+----+----+
| 97 | 65 | 64 | 57 |
+----+----+----+----+
1 row in set (0.00 sec)

CHAR_LENGTH()
-------------
CHAR_LENGTH() to returns the length of the specified string (measured in characters).

	syntax:
	-------
	CHAR_LENGTH(string)

ex:
----
mysql> select char_length("siva") as "no_of_charecters_in_siva",char_length("siva krishna") as "no_of_charecters_in_siva krishna" from dual;

+--------------------------+----------------------------------+
| no_of_charecters_in_siva | no_of_charecters_in_siva krishna |
+--------------------------+----------------------------------+
|                        4 |                               12 |
+--------------------------+----------------------------------+
1 row in set (0.01 sec)

ex2:
---
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.01 sec)

mysql> select * from emp where char_length(ename)>4;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
5 rows in set (0.00 sec)

LENGTH()
--------
LENGTH() to returns the length of the specified string (measured in bytes).
	
	syntax:
	-------
	LENGTH(string)

ex:
---
mysql> select length("siva") from dual;
+----------------+
| length("siva") |
+----------------+
|              4 |
+----------------+
1 row in set (0.00 sec)

mysql> select length("krishna") from dual;
+-------------------+
| length("krishna") |
+-------------------+
|                 7 |
+-------------------+
1 row in set (0.00 sec)

mysql> select length("hello siva krishna") from dual;
+------------------------------+
| length("hello siva krishna") |
+------------------------------+
|                           18 |
+------------------------------+
1 row in set (0.00 sec)


CONCAT()
--------
CONCAT() to allows you to concatinate two or more expressions together.

	syntax
	------
	CONCAT(expression1,expression2,...,expression_n)

note:
------
If any of the expressions is a NULL, the CONCAT function will return a NULL value.

ex:
---
mysql> select concat("siva","krishna") from dual;
+--------------------------+
| concat("siva","krishna") |
+--------------------------+
| sivakrishna              |
+--------------------------+
1 row in set (0.01 sec)

mysql> select concat("siva",' ',"krishna") from dual;
+------------------------------+
| concat("siva",' ',"krishna") |
+------------------------------+
| siva krishna                 |
+------------------------------+
1 row in set (0.00 sec)

mysql> select concat("siva",',',"krishna") from dual;
+------------------------------+
| concat("siva",',',"krishna") |
+------------------------------+
| siva,krishna                 |
+------------------------------+
1 row in set (0.00 sec)

mysql> select concat("siva",',',"krishna",'null') from dual;
+-------------------------------------+
| concat("siva",',',"krishna",'null') |
+-------------------------------------+
| siva,krishnanull                    |
+-------------------------------------+
1 row in set (0.00 sec)

mysql> select concat("siva",',',"krishna",null) from dual;
+-----------------------------------+
| concat("siva",',',"krishna",null) |
+-----------------------------------+
| NULL                              |
+-----------------------------------+
1 row in set (0.00 sec)


ex2:
----
mysql> create table workers(wid int primary key,fname char(20) not null,lname char(20) not null,sal decimal(6,2) check(sal>=5000),doj date,dept char(10));

Query OK, 0 rows affected (0.05 sec)


mysql> insert into workers values(1001,'siva','krishna',5000,"2023-5-21","Admin");
Query OK, 1 row affected (0.03 sec)

mysql> insert into workers values(1002,'virat','kohli',6000,"2022-7-12","HR");
Query OK, 1 row affected (0.02 sec)

mysql> insert into workers values(1003,'sachin','tendulkar',5500,"2021-9-05","Programmer");
Query OK, 1 row affected (0.01 sec)

mysql> insert into workers values(1004,'rama','rao',6500,"2022-9-12","Analyst");
Query OK, 1 row affected (0.02 sec)

mysql> insert into workers values(1005,'ishan','kishna',7300,"2023-1-12","HR");
Query OK, 1 row affected (0.01 sec)

mysql> insert into workers values(1006,'virendra','shewag',8000,"2021-5-23","Admin");
Query OK, 1 row affected (0.02 sec)

mysql> insert into workers values(1007,'rohith','sharma',9000,"2022-7-13","Programmer");
Query OK, 1 row affected (0.01 sec)

mysql> select * from workers;
+------+----------+-----------+---------+------------+------------+
| wid  | fname    | lname     | sal     | doj        | dept       |
+------+----------+-----------+---------+------------+------------+
| 1001 | siva     | krishna   | 5000.00 | 2023-05-21 | Admin      |
| 1002 | virat    | kohli     | 6000.00 | 2022-07-12 | HR         |
| 1003 | sachin   | tendulkar | 5500.00 | 2021-09-05 | Programmer |
| 1004 | rama     | rao       | 6500.00 | 2022-09-12 | Analyst    |
| 1005 | ishan    | kishna    | 7300.00 | 2023-01-12 | HR         |
| 1006 | virendra | shewag    | 8000.00 | 2021-05-23 | Admin      |
| 1007 | rohith   | sharma    | 9000.00 | 2022-07-13 | Programmer |
+------+----------+-----------+---------+------------+------------+
7 rows in set (0.00 sec)

ex3:
----
mysql> select concat(fname,' ',lname) as "Full_Name" from workers where sal>6000;
+-----------------+
| Full_Name       |
+-----------------+
| rama rao        |
| ishan kishna    |
| virendra shewag |
| rohith sharma   |
+-----------------+
4 rows in set (0.01 sec)

ex4:
----
mysql> select wid,concat(fname,' ',lname) as "Full_Name",sal,doj,dept from workers where char_length(lname)<=5;
+------+-------------+---------+------------+---------+
| wid  | Full_Name   | sal     | doj        | dept    |
+------+-------------+---------+------------+---------+
| 1002 | virat kohli | 6000.00 | 2022-07-12 | HR      |
| 1004 | rama rao    | 6500.00 | 2022-09-12 | Analyst |
+------+-------------+---------+------------+---------+
2 rows in set (0.00 sec)


										DAY-16
									       ---------


CONCAT_WS()
-----------
CONCAT_WS() allows you to concatenate two or more expressions together and adds a separator between each of the concatenated expressions.

	syntax
	------
        CONCAT_WS(separator,expression1,expression2,...expression_n)

ex:
---
mysql> select concat("hai",' ',"siva",' ',"krishna",' ',"good",' ',"morning") as "result" from dual;

+-------------------------------+
| result                        |
+-------------------------------+
| hai siva krishna good morning |
+-------------------------------+
1 row in set (0.01 sec)


mysql> select concat_ws(' ',"hai","siva","krishna","good","morning") as "result" from dual;

+-------------------------------+
| result                        |
+-------------------------------+
| hai siva krishna good morning |
+-------------------------------+
1 row in set (0.00 sec)

ex2:
----
mysql> select concat("hai",' ',null) as "result" from dual;
+--------+
| result |
+--------+
| NULL   |
+--------+
1 row in set (0.00 sec)

mysql> select concat_ws(' ',"hai",null) as "result" from dual;
+--------+
| result |
+--------+
| hai    |
+--------+
1 row in set (0.00 sec)

ex3:
----
mysql> select concat("hai",' ',null,' ','siva') as "result" from dual;
+--------+
| result |
+--------+
| NULL   |
+--------+
1 row in set (0.00 sec)

mysql> select concat_ws(' ',"hai",null,'siva') as "result" from dual;
+----------+
| result   |
+----------+
| hai siva |
+----------+
1 row in set (0.00 sec)

ex4:
----
mysql> select concat(null,' ',null) as "result" from dual;
+--------+
| result |
+--------+
| NULL   |
+--------+
1 row in set (0.00 sec)

mysql> select concat_ws(' ',null,null) as "result" from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.00 sec)


FIELD()
-------
FIELD() to returns the position of a value in a list of values (val1, val2, val3, ...)

	syntax
	------
	FIELD(value,val1,val2,val3,...)

note:
-----
by default position is started from '1'

If value is not found in the list of values (val1,val2,val3,...),the FIELD function will return 0.

If value is NULL, the FIELD function will return 0.

ex:
---
mysql> select field('a','d','c','a','b') as 'position_of_a' from dual;
+---------------+
| position_of_a |
+---------------+
|             3 |
+---------------+
1 row in set (0.01 sec)

mysql> select field('d','d','c','a','b') as 'position_of_d' from dual;
+---------------+
| position_of_d |
+---------------+
|             1 |
+---------------+
1 row in set (0.00 sec)

mysql> select field('e','d','c','a','b') as 'position_of_e' from dual;
+---------------+
| position_of_e |
+---------------+
|             0 |
+---------------+
1 row in set (0.00 sec)

mysql> select field(null,'d','c','a','b') as 'position_of_NULL' from dual;
+------------------+
| position_of_NULL |
+------------------+
|                0 |
+------------------+
1 row in set (0.00 sec)

mysql> select field(null,'d','c','a','b',null,9) as 'position_of_NULL' from dual;
+------------------+
| position_of_NULL |
+------------------+
|                0 |
+------------------+
1 row in set (0.00 sec)

mysql> select field(9,'d','c','a','b',null,9) as 'position_of_9' from dual;
+---------------+
| position_of_9 |
+---------------+
|             6 |
+---------------+
1 row in set, 4 warnings (0.01 sec)

mysql> select field('a','d','c','a','b','a') as 'position_of_a' from dual;
+---------------+
| position_of_a |
+---------------+
|             3 |
+---------------+
1 row in set (0.00 sec)

mysql> select field('b','d','c','a','b','a','c','d','a','b','d') as 'position_of_b' from dual;
+---------------+
| position_of_b |
+---------------+
|             4 |
+---------------+
1 row in set (0.00 sec)

note:
----
if value is repeated,in that case the field() to return the position of first occurence of that valus from left to right only.


INSERT()
--------
INSERT() Is used to inserts a substring into a string at a specified position for a certain number of characters.

	syntax
	------
	INSERT(string,position,number,substring)

string:
	The string to modify.
position:
	The position in string to insert substring.
number:
	The number of characters to replace in string.
substring:
	The substring to insert into string.

ex:
----
mysql> select insert("good morning",6,5,'night') as "result" from dual;
+--------------+
| result       |
+--------------+
| good nightng |
+--------------+
1 row in set (0.01 sec)

mysql> select insert("good morning",6,3,'night') as "result" from dual;
+----------------+
| result         |
+----------------+
| good nightning |
+----------------+
1 row in set (0.00 sec)

mysql> select insert("good morning",6,9,'night') as "result" from dual;
+------------+
| result     |
+------------+
| good night |
+------------+
1 row in set (0.00 sec)

mysql> select insert("good morning",6,7,'night') as "result" from dual;
+------------+
| result     |
+------------+
| good night |
+------------+
1 row in set (0.00 sec)

mysql> select insert("good morning",6,2,'night') as "result" from dual;
+-----------------+
| result          |
+-----------------+
| good nightrning |
+-----------------+
1 row in set (0.00 sec)


										DAY-17
									       --------


INSTR()
-------
INSTR() to returns the location of a substring in a string.

	syntax
	-----
	INSTR(string,substring )

note:
-----
The first position in string is 1.

ex:
---
mysql> select instr("siva",'i') as "result" from dual;
+--------+
| result |
+--------+
|      2 |
+--------+
1 row in set (0.01 sec)

mysql> select instr("siva",'k') as "result" from dual;
+--------+
| result |
+--------+
|      0 |
+--------+
1 row in set (0.00 sec)

mysql> select instr("hai siva krishna",'siva') as "result" from dual;
+--------+
| result |
+--------+
|      5 |
+--------+
1 row in set (0.00 sec)

LCASE() or LOWER()
-------    --------
LCASE()  or LOWER() to converts all characters in the specified string to lowercase.

	syntax
	------
	LCASE(string) or LOWER(string)



ex:
---
mysql> select lcase("Rama") as "result" from dual;
+--------+
| result |
+--------+
| rama   |
+--------+
1 row in set (0.01 sec)

mysql> select lcase("Hello Rama KRIshna@123") as "result" from dual;
+------------------------+
| result                 |
+------------------------+
| hello rama krishna@123 |
+------------------------+
1 row in set (0.00 sec)

mysql> select lower("Rama") as "result" from dual;
+--------+
| result |
+--------+
| rama   |
+--------+
1 row in set (0.00 sec)

mysql> select lower("Hello Rama KRIshna@123") as "result" from dual;
+------------------------+
| result                 |
+------------------------+
| hello rama krishna@123 |
+------------------------+
1 row in set (0.00 sec)


UCASE() or UPPER()
-------    -------
UCASE() or UPPER() to converts all characters in the specified string to uppercase.

	syntax
	-------
	UCASE(string)  or UPPER(string)

ex:
---
mysql> select ucase("siva") as "result_1",upper("siva") as "result_2" from dual;
+----------+----------+
| result_1 | result_2 |
+----------+----------+
| SIVA     | SIVA     |
+----------+----------+
1 row in set (0.01 sec)

mysql> select ucase("Hello siva krishna@123") as "result_1",upper("Hello siva krishna@123") as "result_2" from dual;
+------------------------+------------------------+
| result_1               | result_2               |
+------------------------+------------------------+
| HELLO SIVA KRISHNA@123 | HELLO SIVA KRISHNA@123 |
+------------------------+------------------------+
1 row in set (0.00 sec)


LEFT()
------
LEFT() allows you to extract a substring from a string, starting from the left-most character.

	syntax
	------
	LEFT(string,number_of_characters)

ex:
---
mysql> select left("siva krishna",3) as "result" from dual;
+--------+
| result |
+--------+
| siv    |
+--------+
1 row in set (0.00 sec)

mysql> select left("siva krishna",9) as "result" from dual;
+-----------+
| result    |
+-----------+
| siva kris |
+-----------+
1 row in set (0.00 sec)

mysql> select left("siva krishna",15) as "result" from dual;
+--------------+
| result       |
+--------------+
| siva krishna |
+--------------+
1 row in set (0.00 sec)

note:
----
we are passing 0 and negative numbers,in that case dont return anything.

mysql> select left("siva krishna",-3) as "result" from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.01 sec)

mysql> select left("siva krishna",0) as "result" from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.00 sec)

RIGHT()
--------
RIGHT() allows you to extract a substring from a string, starting from the right-most character.

	syntax
	------
	RIGHT(string,number_of_characters)

ex:
---
mysql> select right("siva krishna",3) as "result" from dual;
+--------+
| result |
+--------+
| hna    |
+--------+
1 row in set (0.01 sec)

mysql> select right("siva krishna",7) as "result" from dual;
+---------+
| result  |
+---------+
| krishna |
+---------+
1 row in set (0.00 sec)

mysql> select right("siva krishna",17) as "result" from dual;
+--------------+
| result       |
+--------------+
| siva krishna |
+--------------+
1 row in set (0.00 sec)

mysql> select right("siva krishna",0) as "result" from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.00 sec)

mysql> select right("siva krishna",-5) as "result" from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.00 sec)


LPAD()
------
LPAD() returns a string that is left-padded with a specified string to a certain length.

	syntax
	------
        LPAD(string,length,pad_string)

ex:
---
mysql> select lpad("siva krishna",3,'hai') as "result" from dual;
+--------+
| result |
+--------+
| siv    |
+--------+
1 row in set (0.01 sec)

mysql> select lpad("siva krishna",9,'hai') as "result" from dual;
+-----------+
| result    |
+-----------+
| siva kris |
+-----------+
1 row in set (0.00 sec)

mysql> select lpad("siva krishna",15,'hai') as "result" from dual;
+-----------------+
| result          |
+-----------------+
| haisiva krishna |
+-----------------+
1 row in set (0.00 sec)

mysql> select lpad("siva krishna",20,'hai') as "result" from dual;
+----------------------+
| result               |
+----------------------+
| haihaihasiva krishna |
+----------------------+
1 row in set (0.00 sec)

mysql> select lpad("siva krishna",0,'hai') as "result" from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.00 sec)

mysql> select lpad("siva krishna",-1,'hai') as "result" from dual;
+--------+
| result |
+--------+
| NULL   |
+--------+
1 row in set (0.00 sec)


RPAD()
------
RPAD() returns a string that is right-padded with a specified string to a certain length.

	syntax
	------
	RPAD(string,length,pad_string)

ex:
----
mysql> select rpad("siva krishna",3,'hai') as "result" from dual;
+--------+
| result |
+--------+
| siv    |
+--------+
1 row in set (0.01 sec)

mysql> select rpad("siva krishna",9,'hai') as "result" from dual;
+-----------+
| result    |
+-----------+
| siva kris |
+-----------+
1 row in set (0.00 sec)

mysql> select rpad("siva krishna",15,'hai') as "result" from dual;
+-----------------+
| result          |
+-----------------+
| siva krishnahai |
+-----------------+
1 row in set (0.00 sec)

mysql> select rpad("siva krishna",20,'hai') as "result" from dual;
+----------------------+
| result               |
+----------------------+
| siva krishnahaihaiha |
+----------------------+
1 row in set (0.00 sec)

mysql> select rpad("siva krishna",0,'hai') as "result" from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.00 sec)

mysql> select rpad("siva krishna",-1,'hai') as "result" from dual;
+--------+
| result |
+--------+
| NULL   |
+--------+
1 row in set (0.00 sec)


ex:
----
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
+-----+---------+---------+------+
7 rows in set (0.00 sec)

mysql> create table lpad_enames as select *,lpad(ename,char_length(ename)+3,'Mr ') as 'updated_ename' from emp;
Query OK, 7 rows affected (0.07 sec)
Records: 7  Duplicates: 0  Warnings: 0

mysql> select * from lpad_enames;
+-----+---------+---------+------+---------------+
| eid | ename   | esal    | dno  | updated_ename |
+-----+---------+---------+------+---------------+
| 101 | siva    | 3000.00 |   10 | Mr siva       |
| 102 | rama    | 4000.00 |   20 | Mr rama       |
| 103 | krishna | 5000.00 |   30 | Mr krishna    |
| 104 | sachin  | 4000.00 |   10 | Mr sachin     |
| 105 | dhoni   | 5000.00 |   30 | Mr dhoni      |
| 106 | virat   | 4000.00 |   20 | Mr virat      |
| 107 | rohith  | 3000.00 |   10 | Mr rohith     |
+-----+---------+---------+------+---------------+
7 rows in set (0.00 sec)


mysql> select *,rpad(updated_ename,char_length(updated_ename)+5,' Engg') as 'rpad_updated_ename' from lpad_enames;
+-----+---------+---------+------+---------------+--------------------+
| eid | ename   | esal    | dno  | updated_ename | rpad_updated_ename |
+-----+---------+---------+------+---------------+--------------------+
| 101 | siva    | 3000.00 |   10 | Mr siva       | Mr siva Engg       |
| 102 | rama    | 4000.00 |   20 | Mr rama       | Mr rama Engg       |
| 103 | krishna | 5000.00 |   30 | Mr krishna    | Mr krishna Engg    |
| 104 | sachin  | 4000.00 |   10 | Mr sachin     | Mr sachin Engg     |
| 105 | dhoni   | 5000.00 |   30 | Mr dhoni      | Mr dhoni Engg      |
| 106 | virat   | 4000.00 |   20 | Mr virat      | Mr virat Engg      |
| 107 | rohith  | 3000.00 |   10 | Mr rohith     | Mr rohith Engg     |
+-----+---------+---------+------+---------------+--------------------+
7 rows in set (0.00 sec)


mysql> select *,concat_ws(' ','Mr',ename,'Engg') as 'lpad_rpad_ename' from emp;
+-----+---------+---------+------+-----------------+
| eid | ename   | esal    | dno  | lpad_rpad_ename |
+-----+---------+---------+------+-----------------+
| 101 | siva    | 3000.00 |   10 | Mr siva Engg    |
| 102 | rama    | 4000.00 |   20 | Mr rama Engg    |
| 103 | krishna | 5000.00 |   30 | Mr krishna Engg |
| 104 | sachin  | 4000.00 |   10 | Mr sachin Engg  |
| 105 | dhoni   | 5000.00 |   30 | Mr dhoni Engg   |
| 106 | virat   | 4000.00 |   20 | Mr virat Engg   |
| 107 | rohith  | 3000.00 |   10 | Mr rohith Engg  |
+-----+---------+---------+------+-----------------+
7 rows in set (0.00 sec)



									DAY-18
								       --------


TRIM()
-------
TRIM() to removes all specified characters either from the beginning or the end of a string or both places.

	syntax
	------
	TRIM([LEADING|TRAILING|BOTH] [trim_character FROM] string)

If you do not specify a value for the first parameter (LEADING, TRAILING, BOTH), the TRIM function will default to BOTH and remove trim_character from both the front and end of string.

If you do not specify a trim_character, the TRIM function will default the character to be removed as a space character.

ex:
---
mysql> select trim('m' from 'madam') as 'result' from dual;
+--------+
| result |
+--------+
| ada    |
+--------+
1 row in set (0.01 sec)

mysql> select trim(leading 'm' from 'madam') as 'result' from dual;
+--------+
| result |
+--------+
| adam   |
+--------+
1 row in set (0.00 sec)

mysql> select trim(trailing 'm' from 'madam') as 'result' from dual;
+--------+
| result |
+--------+
| mada   |
+--------+
1 row in set (0.00 sec)

mysql> select trim(' madam ') as 'result' from dual;
+--------+
| result |
+--------+
| madam  |
+--------+
1 row in set (0.00 sec)

LTRIM()
-------
LTRIM() to removes all space characters from the left-hand side of a string.

	syntax
	------
	LTRIM(string)

ex:
---
mysql> select trim('   madam   ') as 'result' from dual;
+--------+
| result |
+--------+
| madam  |
+--------+
1 row in set (0.00 sec)

mysql> select ltrim('   madam   ') as 'result' from dual;
+----------+
| result   |
+----------+
| madam    |
+----------+
1 row in set (0.01 sec)


RTRIM()
-------
RTRIM() to removes all space characters from the right-hand side of a string. 

	syntax
	------
	RTRIM(string)

ex:
---
mysql> select trim('   madam   ') as 'result' from dual;
+--------+
| result |
+--------+
| madam  |
+--------+
1 row in set (0.00 sec)

mysql> select rtrim('   madam   ') as 'result' from dual;
+----------+
| result   |
+----------+
|    madam |
+----------+
1 row in set (0.01 sec)

REPEAT()
--------
REPEAT() to repeats a string a specified number of times.

	syntax
	------
	REPEAT(string,number)

note:
-----
If number is less than 1, the REPEAT function will return an empty string.

ex:
---
mysql> select repeat("siva",4) as 'result' from dual;
+------------------+
| result           |
+------------------+
| sivasivasivasiva |
+------------------+
1 row in set (0.01 sec)

mysql> select repeat("siva",0) as 'result' from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.00 sec)

mysql> select repeat("siva",-3) as 'result' from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.01 sec)


REPLACE()
---------
REPLACE() to replaces all occurrences of a specified string.

	syntax
	------
	REPLACE(string,from_substring,to_substring)

ex:
---
mysql> select replace("siva krishna",'i','u') as 'result' from dual;
+--------------+
| result       |
+--------------+
| suva krushna |
+--------------+
1 row in set (0.01 sec)

mysql> select replace("siva krishna",'b','u') as 'result' from dual;
+--------------+
| result       |
+--------------+
| siva krishna |
+--------------+
1 row in set (0.00 sec)

ex:
---
mysql> select replace(concat_ws(' ',fname,lname),'i','u') as 'result' from workers;

+------------------+
| result           |
+------------------+
| suva krushna     |
| vurat kohlu      |
| sachun tendulkar |
| rama rao         |
| ushan kushna     |
| vurendra shewag  |
| rohuth sharma    |
+------------------+
7 rows in set (0.01 sec)

ex:
---
mysql> select repeat(lname,char_length(lname)) as 'result' from workers where char_length(fname)<=4;
+---------------------------------------------------+
| result                                            |
+---------------------------------------------------+
| krishnakrishnakrishnakrishnakrishnakrishnakrishna |
| raoraorao                                         |
+---------------------------------------------------+
2 rows in set (0.01 sec)


REVERSE()
---------
REVERSE() to returns a string with the characters in reverse order.

	syntax
	-------
	REVERSE(string)

ex:
---
mysql> select reverse('siva') as 'result' from dual;
+--------+
| result |
+--------+
| avis   |
+--------+
1 row in set (0.00 sec)

ex2:
---
mysql> select * from cust;
+-----+-------+
| cid | cname |
+-----+-------+
| 101 | madam |
| 102 | bad   |
| 103 | dad   |
| 104 | mama  |
| 105 | mam   |
| 106 | siva  |
| 107 | papa  |
+-----+-------+
7 rows in set (0.00 sec)

mysql> select * from cust where cname=reverse(cname);
+-----+-------+
| cid | cname |
+-----+-------+
| 101 | madam |
| 103 | dad   |
| 105 | mam   |
+-----+-------+
3 rows in set (0.00 sec)

ex:
---
mysql> select wid,reverse(concat_ws(' ',fname,lname)) as 'Full_Name',sal,doj,dept from workers;
+------+------------------+---------+------------+------------+
| wid  | Full_Name        | sal     | doj        | dept       |
+------+------------------+---------+------------+------------+
| 1001 | anhsirk avis     | 5000.00 | 2023-05-21 | Admin      |
| 1002 | ilhok tariv      | 6000.00 | 2022-07-12 | HR         |
| 1003 | rakludnet nihcas | 5500.00 | 2021-09-05 | Programmer |
| 1004 | oar amar         | 6500.00 | 2022-09-12 | Analyst    |
| 1005 | anhsik nahsi     | 7300.00 | 2023-01-12 | HR         |
| 1006 | gawehs ardneriv  | 8000.00 | 2021-05-23 | Admin      |
| 1007 | amrahs htihor    | 9000.00 | 2022-07-13 | Programmer |
+------+------------------+---------+------------+------------+
7 rows in set (0.00 sec)

SPACE()
-------
SPACE() to returns the string with a specified number of spaces.

	syntax
	------
	SPACE(number)

ex:
---
mysql> select space(4) as 'result' from dual;
+--------+
| result |
+--------+
|        |
+--------+
1 row in set (0.00 sec)



										DAY-19
									       --------


STRCMP()
--------
STRCMP() to tests whether two strings are same,using the current character set.

	syntax
	------
	STRCMP(string1, string2 )

note:
-----
If string1 and string2 are the same, the STRCMP function will return 0.
If string1 is smaller than string2, the STRCMP function will return -1.
If string1 is larger than string2, the STRCMP function will return 1.

ex:
----
mysql> select strcmp("siva","siva") as 'result' from dual;
+--------+
| result |
+--------+
|      0 |
+--------+
1 row in set (0.02 sec)

mysql> select strcmp("sivA","siva") as 'result' from dual;
+--------+
| result |
+--------+
|      0 |
+--------+
1 row in set (0.00 sec)


mysql> select strcmp("siva","rama") as 'result' from dual;
+--------+
| result |
+--------+
|      1 |
+--------+
1 row in set (0.00 sec)

mysql> select strcmp("krishna","siva") as 'result' from dual;
+--------+
| result |
+--------+
|     -1 |
+--------+
1 row in set (0.00 sec)

mysql> select strcmp("sachin","siva") as 'result' from dual;
+--------+
| result |
+--------+
|     -1 |
+--------+
1 row in set (0.00 sec)


SUBSTR() or SUBSTRING()
--------    ------------
SUBSTR() or SUBSTRING() functions are allows you to extract a substring from a string.

	syntax
	------
	SUBSTR(string,start_position,[length])

			(or)

	SUBSTR(string FROM start_position [ FOR length ] )

	syntax
	------
	SUBSTRING(string,start_position,[length])

			(or)

	SUBSTRING(string FROM start_position [ FOR length ] )

ex1:
---
mysql> select substr("siva krishna",6,5) as 'result' from dual;
+--------+
| result |
+--------+
| krish  |
+--------+
1 row in set (0.00 sec)

mysql> select substring("siva krishna",6,5) as 'result' from dual;
+--------+
| result |
+--------+
| krish  |
+--------+
1 row in set (0.00 sec)

ex2:
----
mysql> select substr("siva krishna" from 6 for 5) as 'result' from dual;
+--------+
| result |
+--------+
| krish  |
+--------+
1 row in set (0.00 sec)

mysql> select substring("siva krishna" from 6 for 5) as 'result' from dual;
+--------+
| result |
+--------+
| krish  |
+--------+
1 row in set (0.00 sec)

ex3:
----
mysql> select substr("siva krishna",6) as 'result' from dual;
+---------+
| result  |
+---------+
| krishna |
+---------+
1 row in set (0.00 sec)

mysql> select substring("siva krishna",6) as 'result' from dual;
+---------+
| result  |
+---------+
| krishna |
+---------+
1 row in set (0.00 sec)

mysql> select substr("siva krishna" from 6) as 'result' from dual;
+---------+
| result  |
+---------+
| krishna |
+---------+
1 row in set (0.00 sec)

mysql> select substring("siva krishna" from 6) as 'result' from dual;
+---------+
| result  |
+---------+
| krishna |
+---------+
1 row in set (0.00 sec)

ex4:
---
mysql> select *,concat(substr(fname,1,3),'',substr(lname,char_length(lname)-2,3)) as "UserName" from workers;
+------+----------+-----------+---------+------------+------------+----------+
| wid  | fname    | lname     | sal     | doj        | dept       | UserName |
+------+----------+-----------+---------+------------+------------+----------+
| 1001 | siva     | krishna   | 5000.00 | 2023-05-21 | Admin      | sivhna   |
| 1002 | virat    | kohli     | 6000.00 | 2022-07-12 | HR         | virhli   |
| 1003 | sachin   | tendulkar | 5500.00 | 2021-09-05 | Programmer | sackar   |
| 1004 | rama     | rao       | 6500.00 | 2022-09-12 | Analyst    | ramrao   |
| 1005 | ishan    | kishna    | 7300.00 | 2023-01-12 | HR         | ishhna   |
| 1006 | virendra | shewag    | 8000.00 | 2021-05-23 | Admin      | virwag   |
| 1007 | rohith   | sharma    | 9000.00 | 2022-07-13 | Programmer | rohrma   |
+------+----------+-----------+---------+------------+------------+----------+
7 rows in set (0.01 sec)

numerical/number functions:
----------------------------
ABS()
-----
ABS() to returns the absolute value of given number.

	syntax
	-------
	ABS(number)

mysql> select abs(2.3) as 'result_1',abs(3) as 'result_2',abs(-5) as 'result_3',abs(-2.1) as 'result_4' from dual;
+----------+----------+----------+----------+
| result_1 | result_2 | result_3 | result_4 |
+----------+----------+----------+----------+
|      2.3 |        3 |        5 |      2.1 |
+----------+----------+----------+----------+
1 row in set (0.01 sec)


CEIL() or CEILING()
------    ----------
CEIL function returns the smallest integer value that is greater than or equal to a number.

	syntax
	-------
	CEIL(number)

		(or)

	CEILING(number)

ex:
---
mysql> select ceil(2.9) as 'result_1',ceil(2.1) as "result_2" from dual;
+----------+----------+
| result_1 | result_2 |
+----------+----------+
|        3 |        3 |
+----------+----------+
1 row in set (0.01 sec)

mysql> select ceiling(2.9) as 'result_1',ceiling(2.1) as "result_2" from dual;
+----------+----------+
| result_1 | result_2 |
+----------+----------+
|        3 |        3 |
+----------+----------+
1 row in set (0.00 sec)

FLOOR()
-------
FLOOR() to returns the largest integer value that is equal to or less than a number.

	syntax
	------
	FLOOR(number)

ex:
---
mysql> select floor(2.9) as 'result_1',floor(4.5) as 'result_2',floor(8.1) as 'result_3' from dual;
+----------+----------+----------+
| result_1 | result_2 | result_3 |
+----------+----------+----------+
|        2 |        4 |        8 |
+----------+----------+----------+
1 row in set (0.01 sec)

ROUND()
-------
ROUND() returns a number rounded to a certain number of decimal places.

	syntax
	------
	ROUND( number,[ decimal_places ])

ex:
---
mysql> select round(2.49) as 'result_1',round(2.50) as 'result_2',round(2.51) as 'result_3' from dual;
+----------+----------+----------+
| result_1 | result_2 | result_3 |
+----------+----------+----------+
|        2 |        3 |        3 |
+----------+----------+----------+
1 row in set (0.01 sec)

ex2:
----
mysql> select round(2.43627329,1) as 'result_1',round(2.43627329,2) as 'result_2',round(2.43627329,3) as 'result_3',round(2.43627329,4) as 'result_4' from dual;
+----------+----------+----------+----------+
| result_1 | result_2 | result_3 | result_4 |
+----------+----------+----------+----------+
|      2.4 |     2.44 |    2.436 |   2.4363 |
+----------+----------+----------+----------+
1 row in set (0.00 sec)

ex:
---
mysql> select avg(sal) from workers;
+-------------+
| avg(sal)    |
+-------------+
| 6757.142857 |
+-------------+
1 row in set (0.01 sec)

mysql> select round(avg(sal),2) from workers;
+-------------------+
| round(avg(sal),2) |
+-------------------+
|           6757.14 |
+-------------------+
1 row in set (0.00 sec)



										DAY-20
									       --------

DEGREES()
---------
DEGREES() to converts a radian value into degrees.

	syntax
	------
	DEGREES(radian)

note:
-----
	1 Radian = 57.2958 Degrees

ex:
---
mysql> select degrees(2) as 'result' from dual;
+--------------------+
| result             |
+--------------------+
| 114.59155902616465 |
+--------------------+
1 row in set (0.01 sec)

mysql> select degrees(1) as 'result' from dual;
+-------------------+
| result            |
+-------------------+
| 57.29577951308232 |
+-------------------+
1 row in set (0.00 sec)

mysql> select round(degrees(3),2) as 'result' from dual;
+--------+
| result |
+--------+
| 171.89 |
+--------+
1 row in set (0.00 sec)


RADIANS()
---------
RADIANS() to convert a value in degrees to radians.

	syntax
	------
	RADIANS(degrees)

ex:
---
mysql> select radians(90) as 'result' from dual;
+--------------------+
| result             |
+--------------------+
| 1.5707963267948966 |
+--------------------+
1 row in set (0.01 sec)

mysql> select round(radians(90),2) as 'result' from dual;
+--------+
| result |
+--------+
|   1.57 |
+--------+
1 row in set (0.00 sec)

DIV()
------
DIV() is used for integer division where n is divided by m and an integer value is returned.

	syntax
	------
	n DIV m

ex:
---
mysql> select 9/3 as 'result_1',9 div 3 as 'result_2' from dual;
+----------+----------+
| result_1 | result_2 |
+----------+----------+
|   3.0000 |        3 |
+----------+----------+
1 row in set (0.00 sec)


EXP()
-----
EXP() to returns "e" raised to the power of number.

	syntax
	------
	EXP(number)

note:
-----
	exponential conistatnt e=2.718

ex:
--
mysql> select exp(2) as 'result' from dual;
+------------------+
| result           |
+------------------+
| 7.38905609893065 |
+------------------+
1 row in set (0.01 sec)


GREATEST()
---------
GREATEST() to returns the greatest value in a list of expressions.

	syntax
	------
	GREATEST(expr1,expr2,...,expr_n)

ex:
---
mysql> select GREATEST(3,2,7,9) as 'result' from dual;
+--------+
| result |
+--------+
|      9 |
+--------+
1 row in set (0.01 sec)

mysql> select GREATEST('t','d','s','a') as 'result' from dual;
+--------+
| result |
+--------+
| t      |
+--------+
1 row in set (0.00 sec)

mysql> select GREATEST('siva','rama','krishna','sachin','dhoni','suresh') as 'result' from dual;
+--------+
| result |
+--------+
| suresh |
+--------+
1 row in set (0.00 sec)


LEAST()
-------
LEAST() to returns the smallest value in a list of expressions.

	syntax
	------
	LEAST(expr1,expr2,...,expr_n)

ex:
---
mysql> select least(3,2,7,9) as 'result' from dual;
+--------+
| result |
+--------+
|      2 |
+--------+
1 row in set (0.00 sec)

mysql> select least('t','d','s','a') as 'result' from dual;
+--------+
| result |
+--------+
| a      |
+--------+
1 row in set (0.00 sec)

mysql> select least('siva','rama','krishna','sachin','dhoni','suresh') as 'result' from dual;
+--------+
| result |
+--------+
| dhoni  |
+--------+
1 row in set (0.00 sec)

MOD()
-----
MOD() to returns the remainder of n divided by m.

	syntax
	------
	MOD(n,m)  or  n MOD m	or n%m

ex:
---
mysql> select mod(9,2) as 'result_1',9%2 as 'result_2', 9 mod 2 as 'result_3' from dual;
+----------+----------+----------+
| result_1 | result_2 | result_3 |
+----------+----------+----------+
|        1 |        1 |        1 |
+----------+----------+----------+
1 row in set (0.01 sec)


PI()
-----
PI() to returns the value of π(pi) displayed with 6 decimal places.

	syntax
	-------
	PI()

mysql> select pi() as 'result' from dual;
+----------+
| result   |
+----------+
| 3.141593 |
+----------+
1 row in set (0.01 sec)

mysql> select round(pi(),2) as 'result' from dual;
+--------+
| result |
+--------+
|   3.14 |
+--------+
1 row in set (0.00 sec)

POW() or POWER()
----------------
POW() to returns m raised to the nth power.

	syntax
	------
	POW(m,n)

	   (or)

	POWER(m,n)

ex:
---
mysql> select pow(3,2) as 'result_1',power(3,2) as 'result_2' from dual;
+----------+----------+
| result_1 | result_2 |
+----------+----------+
|        9 |        9 |
+----------+----------+
1 row in set (0.01 sec)


SQRT()
------
SQRT() to returns the square root of a number.

	syntax
	------
	SQRT(number)

ex:
---
mysql> select sqrt(4) as 'result_1',sqrt(9) as 'result_2',sqrt(64) as 'result_3' from dual;
+----------+----------+----------+
| result_1 | result_2 | result_3 |
+----------+----------+----------+
|        2 |        3 |        8 |
+----------+----------+----------+
1 row in set (0.01 sec)



TRUNCATE()
----------
TRUNCATE() to returns a number truncated to a certain number of decimal places.	

	syntax
	------
	TRUNCATE(number,decimal_places)

note:
-----
If decimal_places is a negative number, the TRUNCATE function will make digits to the left of the decimal place 0 values.

ex:
---
mysql> select truncate(2.3624,2) from dual;
+--------------------+
| truncate(2.3624,2) |
+--------------------+
|               2.36 |
+--------------------+
1 row in set (0.00 sec)

mysql> select truncate(2.3624,0) from dual;
+--------------------+
| truncate(2.3624,0) |
+--------------------+
|                  2 |
+--------------------+
1 row in set (0.00 sec)

mysql> select truncate(2.3624,-1) from dual;
+---------------------+
| truncate(2.3624,-1) |
+---------------------+
|                   0 |
+---------------------+
1 row in set (0.01 sec)

mysql> select round(2.3624,1) as 'result_1',truncate(2.3624,1) as 'result_2' from dual;
+----------+----------+
| result_1 | result_2 |
+----------+----------+
|      2.4 |      2.3 |
+----------+----------+
1 row in set (0.00 sec)

mysql> select round(2.3624,-1) as 'result_1',truncate(2.3624,-1) as 'result_2' from dual;
+----------+----------+
| result_1 | result_2 |
+----------+----------+
|        0 |        0 |
+----------+----------+
1 row in set (0.00 sec)

SIN()
------
SIN() to returns the sine of a number.

	syntax
	------
	SIN(number)

ex:
---
mysql> select sin(90) as 'result_1',sin(0) as 'result_2',sin(45) as 'result_3' from dual;
+--------------------+----------+--------------------+
| result_1           | result_2 | result_3           |
+--------------------+----------+--------------------+
| 0.8939966636005579 |        0 | 0.8509035245341184 |
+--------------------+----------+--------------------+
1 row in set (0.01 sec)

mysql> select round(sin(90),2) as 'result_1',round(sin(0),2) as 'result_2',round(sin(45),2) as 'result_3' from dual;
+----------+----------+----------+
| result_1 | result_2 | result_3 |
+----------+----------+----------+
|     0.89 |        0 |     0.85 |
+----------+----------+----------+
1 row in set (0.00 sec)

COS()
-----
COS() to returns the cosine of a number.

	syntax
	------
	COS(number)

ex:
---
mysql> select cos(90) as 'result_1',cos(0) as 'result_2',cos(45) as 'result_3' from dual;
+---------------------+----------+--------------------+
| result_1            | result_2 | result_3           |
+---------------------+----------+--------------------+
| -0.4480736161291701 |        1 | 0.5253219888177297 |
+---------------------+----------+--------------------+
1 row in set (0.01 sec)


mysql> select round(cos(90),2) as 'result_1',round(cos(0),2) as 'result_2',round(cos(45),2) as 'result_3' from dual;
+----------+----------+----------+
| result_1 | result_2 | result_3 |
+----------+----------+----------+
|    -0.45 |        1 |     0.53 |
+----------+----------+----------+
1 row in set (0.00 sec)



									DAY-21
								       --------


TAN()
-----
TAN() returns the tangent of a number.

	syntax
	------
	TAN(number)

ex1:
---
mysql> select tan(0) as 'result_1',tan(45) as 'result_2',tan(90) as 'result_3' from dual;
+----------+--------------------+--------------------+
| result_1 | result_2           | result_3           |
+----------+--------------------+--------------------+
|        0 | 1.6197751905438615 | -1.995200412208242 |
+----------+--------------------+--------------------+
1 row in set (0.00 sec)


date and time functions:
-------------------------

curdate() or current_date()
---------    ---------------
to return the current date

	syntax
	------
	curdate()  or current_date()

ex:
---
mysql> select curdate() as 'result_1',current_date() as 'result_2' from dual;
+------------+------------+
| result_1   | result_2   |
+------------+------------+
| 2023-09-25 | 2023-09-25 |
+------------+------------+
1 row in set (0.01 sec)

curtime() or current_time()
---------    --------------
to return the current time

	syntax
	------
	curtime()  or  current_time()

ex:
---
mysql> select curtime() as 'result_1',current_time() as 'result_2' from dual;
+----------+----------+
| result_1 | result_2 |
+----------+----------+
| 09:17:40 | 09:17:40 |
+----------+----------+
1 row in set (0.01 sec)



now()
-----
to return the current date and time

	syntax
	------
	now()

ex:
----
mysql> select now() as 'result_1' from dual;
+---------------------+
| result_1            |
+---------------------+
| 2023-09-25 09:19:39 |
+---------------------+
1 row in set (0.01 sec)



DATE_FORMAT()
------------
DATE_FORMAT() formats a date as specified by a format mask.


	syntax
	------
	DATE_FORMAT(date,format_mask)


%a	Weekday name abbreviated (Sun to Sat)

%b	Month name abbreviated (Jan to Dec)

%c	Month as a numeric value (0 to 12)

%D	Day of the month as a numeric value, followed by suffix (1st, 
	2nd, 3rd, ...)

%d	Day of the month as a numeric value (01 to 31)

%e	Day of the month as a numeric value (0 to 31)

%f	Microseconds (000000 to 999999),
	is available starting in MySQL 4.1.1

%H	Hour (00 to 23)

%h	Hour (00 to 12)

%I	Hour (00 to 12)

%i	Minutes (00 to 59)

%j	Day of the year (001 to 366)

%k	Hour (00 to 23)

%l	Hour (1 to 12)

%M	Month name in full (January to December)

%m	Month name as a numeric value (00 to 12)

%p	AM or PM

%r	Time in 12 hour AM or PM format (hh:mm:ss AM/PM)

%S	Seconds (00 to 59)

%s	Seconds (00 to 59)

%T	Time in 24 hour format (hh:mm:ss)

%U	Week where Sunday is the first day of the week (00 to 53)

%u	Week where Monday is the first day of the week (00 to 53)

%V	Week where Sunday is the first day of the week (01 to 53)
	Available starting in MySQL 3.23.8 and used with %X

%v	Week where Monday is the first day of the week (01 to 53)
	Available starting in MySQL 3.23.8 and used with %x

%W	Weekday name in full (Sunday to Saturday)

%w	Day of the week where Sunday=0 and Saturday=6

%X	Year for the week where Sunday is the first day of the week
	Available starting in MySQL 3.23.8 and used with %V

%x	Year for the week where Monday is the first day of the week
	Available starting in MySQL 3.23.8 and used with %v

%Y	Year as a numeric, 4-digit value

%y	Year as a numeric, 2-digit value

ex1:
----
mysql> select date_format(now(),'%Y') as 'Year',date_format(now(),'%M') as 'Month',date_format(now(),'%e') as day,date_format(now(),'%W') as 'Weekday',date_format(now(),'%H:%i:%s.%f %p') as 'Time' from dual;

+------+-----------+------+---------+--------------------+
| Year | Month     | day  | Weekday | Time               |
+------+-----------+------+---------+--------------------+
| 2023 | September | 25   | Monday  | 09:39:44.000000 AM |
+------+-----------+------+---------+--------------------+
1 row in set (0.01 sec)

ex2:
----
mysql> select date_format(now(),'%Y-%c-%e %r') as 'Date and Time' from dual;
+-----------------------+
| Date and Time         |
+-----------------------+
| 2023-9-25 09:45:19 AM |
+-----------------------+
1 row in set (0.00 sec)


mysql> select date_format(now(),'%a %d-%b-%Y') as 'Date' from dual;
+-----------------+
| Date            |
+-----------------+
| Mon 25-Sep-2023 |
+-----------------+
1 row in set (0.00 sec)


mysql> select date_format(now(),'%v') as 'Year_Of_The_Week',date_format(now(),'%j') as 'Year_Of_The_Day' from dual;
+------------------+-----------------+
| Year_Of_The_Week | Year_Of_The_Day |
+------------------+-----------------+
| 39               | 268             |
+------------------+-----------------+
1 row in set (0.00 sec)

ex:
----
mysql> select * from workers;
+------+----------+-----------+---------+------------+------------+
| wid  | fname    | lname     | sal     | doj        | dept       |
+------+----------+-----------+---------+------------+------------+
| 1001 | siva     | krishna   | 5000.00 | 2023-05-21 | Admin      |
| 1002 | virat    | kohli     | 6000.00 | 2022-07-12 | HR         |
| 1003 | sachin   | tendulkar | 5500.00 | 2021-09-05 | Programmer |
| 1004 | rama     | rao       | 6500.00 | 2022-09-12 | Analyst    |
| 1005 | ishan    | kishna    | 7300.00 | 2023-01-12 | HR         |
| 1006 | virendra | shewag    | 8000.00 | 2021-05-23 | Admin      |
| 1007 | rohith   | sharma    | 9000.00 | 2022-07-13 | Programmer |
+------+----------+-----------+---------+------------+------------+
7 rows in set (0.01 sec)

mysql> select * from workers where date_format(doj,'%Y')=2023;
+------+-------+---------+---------+------------+-------+
| wid  | fname | lname   | sal     | doj        | dept  |
+------+-------+---------+---------+------------+-------+
| 1001 | siva  | krishna | 5000.00 | 2023-05-21 | Admin |
| 1005 | ishan | kishna  | 7300.00 | 2023-01-12 | HR    |
+------+-------+---------+---------+------------+-------+
2 rows in set (0.01 sec)

ex:
---
mysql> select wid,concat(fname,' ',lname) as 'fullname',sal,doj,dept,date_format(doj,'%W') as 'weekday' from workers;
+------+------------------+---------+------------+------------+-----------+
| wid  | fullname         | sal     | doj        | dept       | weekday   |
+------+------------------+---------+------------+------------+-----------+
| 1001 | siva krishna     | 5000.00 | 2023-05-21 | Admin      | Sunday    |
| 1002 | virat kohli      | 6000.00 | 2022-07-12 | HR         | Tuesday   |
| 1003 | sachin tendulkar | 5500.00 | 2021-09-05 | Programmer | Sunday    |
| 1004 | rama rao         | 6500.00 | 2022-09-12 | Analyst    | Monday    |
| 1005 | ishan kishna     | 7300.00 | 2023-01-12 | HR         | Thursday  |
| 1006 | virendra shewag  | 8000.00 | 2021-05-23 | Admin      | Sunday    |
| 1007 | rohith sharma    | 9000.00 | 2022-07-13 | Programmer | Wednesday |
+------+------------------+---------+------------+------------+-----------+
7 rows in set (0.00 sec)


									DAY-22
								       --------


ex:
----
mysql> select * from workers;
+------+----------+-----------+---------+------------+------------+
| wid  | fname    | lname     | sal     | doj        | dept       |
+------+----------+-----------+---------+------------+------------+
| 1001 | siva     | krishna   | 5000.00 | 2023-05-21 | Admin      |
| 1002 | virat    | kohli     | 6000.00 | 2022-07-12 | HR         |
| 1003 | sachin   | tendulkar | 5500.00 | 2021-09-05 | Programmer |
| 1004 | rama     | rao       | 6500.00 | 2022-09-12 | Analyst    |
| 1005 | ishan    | kishna    | 7300.00 | 2023-01-12 | HR         |
| 1006 | virendra | shewag    | 8000.00 | 2021-05-23 | Admin      |
| 1007 | rohith   | sharma    | 9000.00 | 2022-07-13 | Programmer |
+------+----------+-----------+---------+------------+------------+
7 rows in set (0.01 sec)

mysql> select * from workers where date_format(doj,'%Y')=2021;
+------+----------+-----------+---------+------------+------------+
| wid  | fname    | lname     | sal     | doj        | dept       |
+------+----------+-----------+---------+------------+------------+
| 1003 | sachin   | tendulkar | 5500.00 | 2021-09-05 | Programmer |
| 1006 | virendra | shewag    | 8000.00 | 2021-05-23 | Admin      |
+------+----------+-----------+---------+------------+------------+
2 rows in set (0.00 sec)

mysql> select * from workers where date_format(doj,'%b')='May';
+------+----------+---------+---------+------------+-------+
| wid  | fname    | lname   | sal     | doj        | dept  |
+------+----------+---------+---------+------------+-------+
| 1001 | siva     | krishna | 5000.00 | 2023-05-21 | Admin |
| 1006 | virendra | shewag  | 8000.00 | 2021-05-23 | Admin |
+------+----------+---------+---------+------------+-------+
2 rows in set (0.00 sec)

mysql> select * from workers where date_format(doj,'%m')=05;
+------+----------+---------+---------+------------+-------+
| wid  | fname    | lname   | sal     | doj        | dept  |
+------+----------+---------+---------+------------+-------+
| 1001 | siva     | krishna | 5000.00 | 2023-05-21 | Admin |
| 1006 | virendra | shewag  | 8000.00 | 2021-05-23 | Admin |
+------+----------+---------+---------+------------+-------+
2 rows in set (0.00 sec)


mysql> select * from workers where date_format(doj,'%W')='Sunday';
+------+----------+-----------+---------+------------+------------+
| wid  | fname    | lname     | sal     | doj        | dept       |
+------+----------+-----------+---------+------------+------------+
| 1001 | siva     | krishna   | 5000.00 | 2023-05-21 | Admin      |
| 1003 | sachin   | tendulkar | 5500.00 | 2021-09-05 | Programmer |
| 1006 | virendra | shewag    | 8000.00 | 2021-05-23 | Admin      |
+------+----------+-----------+---------+------------+------------+
3 rows in set (0.00 sec)


mysql> select * from workers where date_format(doj,'%d')=12;
+------+-------+--------+---------+------------+---------+
| wid  | fname | lname  | sal     | doj        | dept    |
+------+-------+--------+---------+------------+---------+
| 1002 | virat | kohli  | 6000.00 | 2022-07-12 | HR      |
| 1004 | rama  | rao    | 6500.00 | 2022-09-12 | Analyst |
| 1005 | ishan | kishna | 7300.00 | 2023-01-12 | HR      |
+------+-------+--------+---------+------------+---------+
3 rows in set (0.00 sec)


ex:
---
mysql> select *,round((5/100)*sal*12,2) as '5%_bonus' from workers where date_format(curdate(),'%Y')-date_format(doj,'%Y')>=1;
+------+----------+-----------+---------+------------+------------+----------+
| wid  | fname    | lname     | sal     | doj        | dept       | 5%_bonus |
+------+----------+-----------+---------+------------+------------+----------+
| 1002 | virat    | kohli     | 6000.00 | 2022-07-12 | HR         |  3600.00 |
| 1003 | sachin   | tendulkar | 5500.00 | 2021-09-05 | Programmer |  3300.00 |
| 1004 | rama     | rao       | 6500.00 | 2022-09-12 | Analyst    |  3900.00 |
| 1006 | virendra | shewag    | 8000.00 | 2021-05-23 | Admin      |  4800.00 |
| 1007 | rohith   | sharma    | 9000.00 | 2022-07-13 | Programmer |  5400.00 |
+------+----------+-----------+---------+------------+------------+----------+
5 rows in set (0.00 sec)

ex:
---
mysql> select *,round((5/100)*sal*12,2) as '5%_bonus' from workers where date_format(now(),'%Y')-date_format(doj,'%Y')>=1;
+------+----------+-----------+---------+------------+------------+----------+
| wid  | fname    | lname     | sal     | doj        | dept       | 5%_bonus |
+------+----------+-----------+---------+------------+------------+----------+
| 1002 | virat    | kohli     | 6000.00 | 2022-07-12 | HR         |  3600.00 |
| 1003 | sachin   | tendulkar | 5500.00 | 2021-09-05 | Programmer |  3300.00 |
| 1004 | rama     | rao       | 6500.00 | 2022-09-12 | Analyst    |  3900.00 |
| 1006 | virendra | shewag    | 8000.00 | 2021-05-23 | Admin      |  4800.00 |
| 1007 | rohith   | sharma    | 9000.00 | 2022-07-13 | Programmer |  5400.00 |
+------+----------+-----------+---------+------------+------------+----------+
5 rows in set (0.00 sec)


What are JOINS?
---------------
Joins are used to retrieving the data from two or more tables. 

The tables are mutually related using primary and foreign keys.

Types of joins:
----------------
1).SELF JOIN: 

A SELF JOIN is used to join a table with itself.

This join can be performed by using table aliases.

	syntax
	------
	SELECT column_lists FROM table1 AS T1, table1 AS T2 WHERE 	        join_conditions;  


ex:
---
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+
8 rows in set (0.00 sec)

mysql> select e1.eid,e1.ename,e1.esal,e1.dno from emp as e1,emp as e2 where e1.dno=e2.dno;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 107 | rohith  | 3000.00 |   10 |
| 104 | sachin  | 4000.00 |   10 |
| 101 | siva    | 3000.00 |   10 |
| 106 | virat   | 4000.00 |   20 |
| 102 | rama    | 4000.00 |   20 |
| 105 | dhoni   | 5000.00 |   30 |
| 103 | krishna | 5000.00 |   30 |
| 107 | rohith  | 3000.00 |   10 |
| 104 | sachin  | 4000.00 |   10 |
| 101 | siva    | 3000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 103 | krishna | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 102 | rama    | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 104 | sachin  | 4000.00 |   10 |
| 101 | siva    | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+
18 rows in set (0.00 sec)


mysql> select * from emp as e1,emp as e2 where e1.dno=e2.dno;
+-----+---------+---------+------+-----+---------+---------+------+
| eid | ename   | esal    | dno  | eid | ename   | esal    | dno  |
+-----+---------+---------+------+-----+---------+---------+------+
| 107 | rohith  | 3000.00 |   10 | 101 | siva    | 3000.00 |   10 |
| 104 | sachin  | 4000.00 |   10 | 101 | siva    | 3000.00 |   10 |
| 101 | siva    | 3000.00 |   10 | 101 | siva    | 3000.00 |   10 |
| 106 | virat   | 4000.00 |   20 | 102 | rama    | 4000.00 |   20 |
| 102 | rama    | 4000.00 |   20 | 102 | rama    | 4000.00 |   20 |
| 105 | dhoni   | 5000.00 |   30 | 103 | krishna | 5000.00 |   30 |
| 103 | krishna | 5000.00 |   30 | 103 | krishna | 5000.00 |   30 |
| 107 | rohith  | 3000.00 |   10 | 104 | sachin  | 4000.00 |   10 |
| 104 | sachin  | 4000.00 |   10 | 104 | sachin  | 4000.00 |   10 |
| 101 | siva    | 3000.00 |   10 | 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 | 105 | dhoni   | 5000.00 |   30 |
| 103 | krishna | 5000.00 |   30 | 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 | 106 | virat   | 4000.00 |   20 |
| 102 | rama    | 4000.00 |   20 | 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 | 107 | rohith  | 3000.00 |   10 |
| 104 | sachin  | 4000.00 |   10 | 107 | rohith  | 3000.00 |   10 |
| 101 | siva    | 3000.00 |   10 | 107 | rohith  | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 | 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+-----+---------+---------+------+
18 rows in set (0.00 sec)


INNER JOIN (Simple Join)
-----------
The inner JOIN is used to return rows from both tables that satisfy the given condition.

	syntax
	------
SELECT t1.'colname', t1.'colname' , t2.'colname' FROM 'table_1' AS t1
INNER JOIN 'table_2' AS t2 ON t1.'colname' = t2.'colname';

	(or)

SELECT column_list FROM table_1 INNER JOIN table_2 ON join_condition;

	(or)

SELECT column_list FROM table_1 INNER JOIN table_2 USING (column_name);


ex:
---
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+
8 rows in set (0.00 sec)

mysql> select * from dept;
+-----+------------+---------+
| dno | dname      | dloc    |
+-----+------------+---------+
|  10 | HR         | Vizag   |
|  20 | admin      | pune    |
|  30 | R&D        | chennai |
|  50 | programmer | hyd     |
+-----+------------+---------+
4 rows in set (0.00 sec)

mysql> select e1.eid,e1.ename,e1.esal,e1.dno,d1.dname,d1.dloc from emp as e1 inner join dept as d1 on e1.dno=d1.dno;
+-----+---------+---------+------+-------+---------+
| eid | ename   | esal    | dno  | dname | dloc    |
+-----+---------+---------+------+-------+---------+
| 101 | siva    | 3000.00 |   10 | HR    | Vizag   |
| 102 | rama    | 4000.00 |   20 | admin | pune    |
| 103 | krishna | 5000.00 |   30 | R&D   | chennai |
| 104 | sachin  | 4000.00 |   10 | HR    | Vizag   |
| 105 | dhoni   | 5000.00 |   30 | R&D   | chennai |
| 106 | virat   | 4000.00 |   20 | admin | pune    |
| 107 | rohith  | 3000.00 |   10 | HR    | Vizag   |
+-----+---------+---------+------+-------+---------+
7 rows in set (0.00 sec)


mysql> select e1.eid,e1.ename,e1.esal,e1.dno,d1.dname,d1.dloc from emp as e1 inner join dept as d1 using(dno);
+-----+---------+---------+------+-------+---------+
| eid | ename   | esal    | dno  | dname | dloc    |
+-----+---------+---------+------+-------+---------+
| 101 | siva    | 3000.00 |   10 | HR    | Vizag   |
| 102 | rama    | 4000.00 |   20 | admin | pune    |
| 103 | krishna | 5000.00 |   30 | R&D   | chennai |
| 104 | sachin  | 4000.00 |   10 | HR    | Vizag   |
| 105 | dhoni   | 5000.00 |   30 | R&D   | chennai |
| 106 | virat   | 4000.00 |   20 | admin | pune    |
| 107 | rohith  | 3000.00 |   10 | HR    | Vizag   |
+-----+---------+---------+------+-------+---------+
7 rows in set (0.00 sec)



											DAY-23
										       --------


Outer JOINs:
-----------
In SQL Outer JOINs return all records matching from both tables.

It can detect records having no match in joined table.

It returns NULL values for records of joined table if no match is found.

LEFT Outer JOIN:
----------------
all rows from left table and matching records from right table.

	syntax
	-------
SELECT t1.'colname', t1.'colname' , t2.'colname' FROM 'table_1' AS t1
LEFT JOIN 'table_2' AS t2 ON t1.'colname' = t2.'colname';

	(or)

SELECT column_list FROM table_1 LEFT JOIN table_2 ON join_condition;

	(or)

SELECT column_list FROM table_1 LEFT JOIN table_2 USING (column_name);

note:
-----
The LEFT JOIN returns all the rows from the table on the left even if no matching rows have been found in the table on the right.

Where no matches have been found in the table on the right, NULL is returned.

ex:
---
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+
8 rows in set (0.01 sec)


mysql> select * from dept;
+-----+------------+---------+
| dno | dname      | dloc    |
+-----+------------+---------+
|  10 | HR         | Vizag   |
|  20 | admin      | pune    |
|  30 | R&D        | chennai |
|  50 | programmer | hyd     |
+-----+------------+---------+
4 rows in set (0.01 sec)

mysql> select e.eid,e.ename,e.esal,e.dno,d.dname,d.dloc from emp as e left join dept as d on e.dno=d.dno;
+-----+---------+---------+------+-------+---------+
| eid | ename   | esal    | dno  | dname | dloc    |
+-----+---------+---------+------+-------+---------+
| 101 | siva    | 3000.00 |   10 | HR    | Vizag   |
| 102 | rama    | 4000.00 |   20 | admin | pune    |
| 103 | krishna | 5000.00 |   30 | R&D   | chennai |
| 104 | sachin  | 4000.00 |   10 | HR    | Vizag   |
| 105 | dhoni   | 5000.00 |   30 | R&D   | chennai |
| 106 | virat   | 4000.00 |   20 | admin | pune    |
| 107 | rohith  | 3000.00 |   10 | HR    | Vizag   |
| 108 | ishan   | 2500.00 |   40 | NULL  | NULL    |
+-----+---------+---------+------+-------+---------+
8 rows in set (0.00 sec)

mysql> select e.eid,e.ename,e.esal,e.dno,d.dname,d.dloc from emp as e left join dept as d using(dno);
+-----+---------+---------+------+-------+---------+
| eid | ename   | esal    | dno  | dname | dloc    |
+-----+---------+---------+------+-------+---------+
| 101 | siva    | 3000.00 |   10 | HR    | Vizag   |
| 102 | rama    | 4000.00 |   20 | admin | pune    |
| 103 | krishna | 5000.00 |   30 | R&D   | chennai |
| 104 | sachin  | 4000.00 |   10 | HR    | Vizag   |
| 105 | dhoni   | 5000.00 |   30 | R&D   | chennai |
| 106 | virat   | 4000.00 |   20 | admin | pune    |
| 107 | rohith  | 3000.00 |   10 | HR    | Vizag   |
| 108 | ishan   | 2500.00 |   40 | NULL  | NULL    |
+-----+---------+---------+------+-------+---------+
8 rows in set (0.00 sec)

mysql> select e.eid,e.ename,e.esal,d.dno,d.dname,d.dloc from dept as d left join emp as e using(dno);
+------+---------+---------+-----+------------+---------+
| eid  | ename   | esal    | dno | dname      | dloc    |
+------+---------+---------+-----+------------+---------+
|  107 | rohith  | 3000.00 |  10 | HR         | Vizag   |
|  104 | sachin  | 4000.00 |  10 | HR         | Vizag   |
|  101 | siva    | 3000.00 |  10 | HR         | Vizag   |
|  106 | virat   | 4000.00 |  20 | admin      | pune    |
|  102 | rama    | 4000.00 |  20 | admin      | pune    |
|  105 | dhoni   | 5000.00 |  30 | R&D        | chennai |
|  103 | krishna | 5000.00 |  30 | R&D        | chennai |
| NULL | NULL    |    NULL |  50 | programmer | hyd     |
+------+---------+---------+-----+------------+---------+
8 rows in set (0.00 sec)

mysql> select * from dept left join emp using(dno);
+-----+------------+---------+------+---------+---------+
| dno | dname      | dloc    | eid  | ename   | esal    |
+-----+------------+---------+------+---------+---------+
|  10 | HR         | Vizag   |  107 | rohith  | 3000.00 |
|  10 | HR         | Vizag   |  104 | sachin  | 4000.00 |
|  10 | HR         | Vizag   |  101 | siva    | 3000.00 |
|  20 | admin      | pune    |  106 | virat   | 4000.00 |
|  20 | admin      | pune    |  102 | rama    | 4000.00 |
|  30 | R&D        | chennai |  105 | dhoni   | 5000.00 |
|  30 | R&D        | chennai |  103 | krishna | 5000.00 |
|  50 | programmer | hyd     | NULL | NULL    |    NULL |
+-----+------------+---------+------+---------+---------+
8 rows in set (0.00 sec)

mysql> select * from dept left join emp on dept.dno=emp.dno;
+-----+------------+---------+------+---------+---------+------+
| dno | dname      | dloc    | eid  | ename   | esal    | dno  |
+-----+------------+---------+------+---------+---------+------+
|  10 | HR         | Vizag   |  107 | rohith  | 3000.00 |   10 |
|  10 | HR         | Vizag   |  104 | sachin  | 4000.00 |   10 |
|  10 | HR         | Vizag   |  101 | siva    | 3000.00 |   10 |
|  20 | admin      | pune    |  106 | virat   | 4000.00 |   20 |
|  20 | admin      | pune    |  102 | rama    | 4000.00 |   20 |
|  30 | R&D        | chennai |  105 | dhoni   | 5000.00 |   30 |
|  30 | R&D        | chennai |  103 | krishna | 5000.00 |   30 |
|  50 | programmer | hyd     | NULL | NULL    |    NULL | NULL |
+-----+------------+---------+------+---------+---------+------+
8 rows in set (0.00 sec)


RIGHT Outer JOIN:
-----------------
all rows from right table and matching records from left table.

	syntax
	-------
SELECT t1.'colname', t1.'colname' , t2.'colname' FROM 'table_1' AS t1
RIGHT JOIN 'table_2' AS t2 ON t1.'colname' = t2.'colname';

		(or)

SELECT column_list FROM table_1 RIGHT JOIN table_2 ON join_condition;

		(or)

SELECT column_list FROM table_1 RIGHT JOIN table_2 USING (column_name);

note:
-----
The RIGHT JOIN returns all the columns from the table on the right even if no matching rows have been found in the table on the left.

Where no matches have been found in the table on the left, NULL is returned.

ex:
----
mysql> select e.eid,e.ename,e.esal,e.dno,d.dname,d.dloc from emp as e right join dept as d on e.dno=d.dno;
+------+---------+---------+------+------------+---------+
| eid  | ename   | esal    | dno  | dname      | dloc    |
+------+---------+---------+------+------------+---------+
|  107 | rohith  | 3000.00 |   10 | HR         | Vizag   |
|  104 | sachin  | 4000.00 |   10 | HR         | Vizag   |
|  101 | siva    | 3000.00 |   10 | HR         | Vizag   |
|  106 | virat   | 4000.00 |   20 | admin      | pune    |
|  102 | rama    | 4000.00 |   20 | admin      | pune    |
|  105 | dhoni   | 5000.00 |   30 | R&D        | chennai |
|  103 | krishna | 5000.00 |   30 | R&D        | chennai |
| NULL | NULL    |    NULL | NULL | programmer | hyd     |
+------+---------+---------+------+------------+---------+
8 rows in set (0.00 sec)

mysql> select e.eid,e.ename,e.esal,d.dno,d.dname,d.dloc from emp as e right join dept as d on e.dno=d.dno;
+------+---------+---------+-----+------------+---------+
| eid  | ename   | esal    | dno | dname      | dloc    |
+------+---------+---------+-----+------------+---------+
|  107 | rohith  | 3000.00 |  10 | HR         | Vizag   |
|  104 | sachin  | 4000.00 |  10 | HR         | Vizag   |
|  101 | siva    | 3000.00 |  10 | HR         | Vizag   |
|  106 | virat   | 4000.00 |  20 | admin      | pune    |
|  102 | rama    | 4000.00 |  20 | admin      | pune    |
|  105 | dhoni   | 5000.00 |  30 | R&D        | chennai |
|  103 | krishna | 5000.00 |  30 | R&D        | chennai |
| NULL | NULL    |    NULL |  50 | programmer | hyd     |
+------+---------+---------+-----+------------+---------+
8 rows in set (0.00 sec)

mysql> select * from emp as e right join dept as d on e.dno=d.dno;
+------+---------+---------+------+-----+------------+---------+
| eid  | ename   | esal    | dno  | dno | dname      | dloc    |
+------+---------+---------+------+-----+------------+---------+
|  107 | rohith  | 3000.00 |   10 |  10 | HR         | Vizag   |
|  104 | sachin  | 4000.00 |   10 |  10 | HR         | Vizag   |
|  101 | siva    | 3000.00 |   10 |  10 | HR         | Vizag   |
|  106 | virat   | 4000.00 |   20 |  20 | admin      | pune    |
|  102 | rama    | 4000.00 |   20 |  20 | admin      | pune    |
|  105 | dhoni   | 5000.00 |   30 |  30 | R&D        | chennai |
|  103 | krishna | 5000.00 |   30 |  30 | R&D        | chennai |
| NULL | NULL    |    NULL | NULL |  50 | programmer | hyd     |
+------+---------+---------+------+-----+------------+---------+
8 rows in set (0.00 sec)

mysql> select * from dept as d right join emp as e on d.dno=e.dno;
+------+-------+---------+-----+---------+---------+------+
| dno  | dname | dloc    | eid | ename   | esal    | dno  |
+------+-------+---------+-----+---------+---------+------+
|   10 | HR    | Vizag   | 101 | siva    | 3000.00 |   10 |
|   20 | admin | pune    | 102 | rama    | 4000.00 |   20 |
|   30 | R&D   | chennai | 103 | krishna | 5000.00 |   30 |
|   10 | HR    | Vizag   | 104 | sachin  | 4000.00 |   10 |
|   30 | R&D   | chennai | 105 | dhoni   | 5000.00 |   30 |
|   20 | admin | pune    | 106 | virat   | 4000.00 |   20 |
|   10 | HR    | Vizag   | 107 | rohith  | 3000.00 |   10 |
| NULL | NULL  | NULL    | 108 | ishan   | 2500.00 |   40 |
+------+-------+---------+-----+---------+---------+------+
8 rows in set (0.00 sec)

mysql> select * from dept as d right join emp as e using(dno);
+------+-----+---------+---------+-------+---------+
| dno  | eid | ename   | esal    | dname | dloc    |
+------+-----+---------+---------+-------+---------+
|   10 | 101 | siva    | 3000.00 | HR    | Vizag   |
|   20 | 102 | rama    | 4000.00 | admin | pune    |
|   30 | 103 | krishna | 5000.00 | R&D   | chennai |
|   10 | 104 | sachin  | 4000.00 | HR    | Vizag   |
|   30 | 105 | dhoni   | 5000.00 | R&D   | chennai |
|   20 | 106 | virat   | 4000.00 | admin | pune    |
|   10 | 107 | rohith  | 3000.00 | HR    | Vizag   |
|   40 | 108 | ishan   | 2500.00 | NULL  | NULL    |
+------+-----+---------+---------+-------+---------+
8 rows in set (0.00 sec)

mysql> select * from emp right join dept using(dno);
+-----+------------+---------+------+---------+---------+
| dno | dname      | dloc    | eid  | ename   | esal    |
+-----+------------+---------+------+---------+---------+
|  10 | HR         | Vizag   |  107 | rohith  | 3000.00 |
|  10 | HR         | Vizag   |  104 | sachin  | 4000.00 |
|  10 | HR         | Vizag   |  101 | siva    | 3000.00 |
|  20 | admin      | pune    |  106 | virat   | 4000.00 |
|  20 | admin      | pune    |  102 | rama    | 4000.00 |
|  30 | R&D        | chennai |  105 | dhoni   | 5000.00 |
|  30 | R&D        | chennai |  103 | krishna | 5000.00 |
|  50 | programmer | hyd     | NULL | NULL    |    NULL |
+-----+------------+---------+------+---------+---------+
8 rows in set (0.00 sec)




										DAY-24
									       --------


Cross JOIN
-----------
Cross JOIN is a simplest form of JOINs which matches each row from one table to all rows of another table.

	(or)

In other words it gives us combinations of each row of first table with all records in second table.

	syntax
	------
	SELECT * FROM table_1 CROSS JOIN table_2;

		(or)

	SELECT select_list FROM table_1 CROSS JOIN table_2;

ex:
---
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+
8 rows in set (0.01 sec)

mysql> select * from dept;
+-----+------------+---------+
| dno | dname      | dloc    |
+-----+------------+---------+
|  10 | HR         | Vizag   |
|  20 | admin      | pune    |
|  30 | R&D        | chennai |
|  50 | programmer | hyd     |
+-----+------------+---------+
4 rows in set (0.00 sec)


mysql> select * from emp cross join dept;
+-----+---------+---------+------+-----+------------+---------+
| eid | ename   | esal    | dno  | dno | dname      | dloc    |
+-----+---------+---------+------+-----+------------+---------+
| 101 | siva    | 3000.00 |   10 |  50 | programmer | hyd     |
| 101 | siva    | 3000.00 |   10 |  30 | R&D        | chennai |
| 101 | siva    | 3000.00 |   10 |  20 | admin      | pune    |
| 101 | siva    | 3000.00 |   10 |  10 | HR         | Vizag   |
| 102 | rama    | 4000.00 |   20 |  50 | programmer | hyd     |
| 102 | rama    | 4000.00 |   20 |  30 | R&D        | chennai |
| 102 | rama    | 4000.00 |   20 |  20 | admin      | pune    |
| 102 | rama    | 4000.00 |   20 |  10 | HR         | Vizag   |
| 103 | krishna | 5000.00 |   30 |  50 | programmer | hyd     |
| 103 | krishna | 5000.00 |   30 |  30 | R&D        | chennai |
| 103 | krishna | 5000.00 |   30 |  20 | admin      | pune    |
| 103 | krishna | 5000.00 |   30 |  10 | HR         | Vizag   |
| 104 | sachin  | 4000.00 |   10 |  50 | programmer | hyd     |
| 104 | sachin  | 4000.00 |   10 |  30 | R&D        | chennai |
| 104 | sachin  | 4000.00 |   10 |  20 | admin      | pune    |
| 104 | sachin  | 4000.00 |   10 |  10 | HR         | Vizag   |
| 105 | dhoni   | 5000.00 |   30 |  50 | programmer | hyd     |
| 105 | dhoni   | 5000.00 |   30 |  30 | R&D        | chennai |
| 105 | dhoni   | 5000.00 |   30 |  20 | admin      | pune    |
| 105 | dhoni   | 5000.00 |   30 |  10 | HR         | Vizag   |
| 106 | virat   | 4000.00 |   20 |  50 | programmer | hyd     |
| 106 | virat   | 4000.00 |   20 |  30 | R&D        | chennai |
| 106 | virat   | 4000.00 |   20 |  20 | admin      | pune    |
| 106 | virat   | 4000.00 |   20 |  10 | HR         | Vizag   |
| 107 | rohith  | 3000.00 |   10 |  50 | programmer | hyd     |
| 107 | rohith  | 3000.00 |   10 |  30 | R&D        | chennai |
| 107 | rohith  | 3000.00 |   10 |  20 | admin      | pune    |
| 107 | rohith  | 3000.00 |   10 |  10 | HR         | Vizag   |
| 108 | ishan   | 2500.00 |   40 |  50 | programmer | hyd     |
| 108 | ishan   | 2500.00 |   40 |  30 | R&D        | chennai |
| 108 | ishan   | 2500.00 |   40 |  20 | admin      | pune    |
| 108 | ishan   | 2500.00 |   40 |  10 | HR         | Vizag   |
+-----+---------+---------+------+-----+------------+---------+
32 rows in set (0.01 sec)


how to retreive the data from morethan two tables?
---------------------------------------------------

	syntax
	-------
	select * from table_1 join-type table_2 on joincondition join-type table3 on joincondition join-type table4 on joincondition,..... ;

ex1:
----
mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+
8 rows in set (0.00 sec)

mysql> select * from dept;
+-----+------------+---------+
| dno | dname      | dloc    |
+-----+------------+---------+
|  10 | HR         | Vizag   |
|  20 | admin      | pune    |
|  30 | R&D        | chennai |
|  50 | programmer | hyd     |
+-----+------------+---------+
4 rows in set (0.00 sec)

mysql> select * from location;
+------------+---------+---------+
| dname      | dloc    | pincode |
+------------+---------+---------+
| HR         | Vizag   |  342345 |
| admin      | pune    |  234123 |
| accountant | hyd     |  432345 |
| R&D        | chennai |  563789 |
| Analyst    | hyd     |  342138 |
+------------+---------+---------+
5 rows in set (0.00 sec)


mysql> select e.eid,e.ename,e.esal,e.dno,d.dname,d.dloc,l.pincode from emp as e inner join dept as d on e.dno=d.dno inner join location as l on d.dname=l.dname;
+-----+---------+---------+------+-------+---------+---------+
| eid | ename   | esal    | dno  | dname | dloc    | pincode |
+-----+---------+---------+------+-------+---------+---------+
| 107 | rohith  | 3000.00 |   10 | HR    | Vizag   |  342345 |
| 104 | sachin  | 4000.00 |   10 | HR    | Vizag   |  342345 |
| 101 | siva    | 3000.00 |   10 | HR    | Vizag   |  342345 |
| 106 | virat   | 4000.00 |   20 | admin | pune    |  234123 |
| 102 | rama    | 4000.00 |   20 | admin | pune    |  234123 |
| 105 | dhoni   | 5000.00 |   30 | R&D   | chennai |  563789 |
| 103 | krishna | 5000.00 |   30 | R&D   | chennai |  563789 |
+-----+---------+---------+------+-------+---------+---------+
7 rows in set (0.00 sec)


mysql> select e.eid,e.ename,e.esal,e.dno,d.dname,d.dloc,l.pincode from emp as e inner join dept as d on e.dno=d.dno inner join location as l on d.dloc=l.dloc;
+-----+---------+---------+------+-------+---------+---------+
| eid | ename   | esal    | dno  | dname | dloc    | pincode |
+-----+---------+---------+------+-------+---------+---------+
| 107 | rohith  | 3000.00 |   10 | HR    | Vizag   |  342345 |
| 104 | sachin  | 4000.00 |   10 | HR    | Vizag   |  342345 |
| 101 | siva    | 3000.00 |   10 | HR    | Vizag   |  342345 |
| 106 | virat   | 4000.00 |   20 | admin | pune    |  234123 |
| 102 | rama    | 4000.00 |   20 | admin | pune    |  234123 |
| 105 | dhoni   | 5000.00 |   30 | R&D   | chennai |  563789 |
| 103 | krishna | 5000.00 |   30 | R&D   | chennai |  563789 |
+-----+---------+---------+------+-------+---------+---------+
7 rows in set (0.00 sec)



mysql> select * from employe inner join dept on employe.dno=dept.dno inner join location on dept.dloc=location.dloc;



mysql> select e.eid,e.ename,e.esal,e.dno,d.dname,d.dloc,l.pincode from emp as e left join dept as d on e.dno=d.dno right join location as l on d.dname=l.dname;

+------+---------+---------+------+-------+---------+---------+
| eid  | ename   | esal    | dno  | dname | dloc    | pincode |
+------+---------+---------+------+-------+---------+---------+
|  101 | siva    | 3000.00 |   10 | HR    | Vizag   |  342345 |
|  104 | sachin  | 4000.00 |   10 | HR    | Vizag   |  342345 |
|  107 | rohith  | 3000.00 |   10 | HR    | Vizag   |  342345 |
|  102 | rama    | 4000.00 |   20 | admin | pune    |  234123 |
|  106 | virat   | 4000.00 |   20 | admin | pune    |  234123 |
| NULL | NULL    |    NULL | NULL | NULL  | NULL    |  432345 |
|  103 | krishna | 5000.00 |   30 | R&D   | chennai |  563789 |
|  105 | dhoni   | 5000.00 |   30 | R&D   | chennai |  563789 |
| NULL | NULL    |    NULL | NULL | NULL  | NULL    |  342138 |
+------+---------+---------+------+-------+---------+---------+
9 rows in set (0.00 sec)

mysql> select e.eid,e.ename,e.esal,e.dno,l.dname,d.dloc,l.pincode from emp as e left join dept as d on e.dno=d.dno right join location as l on d.dname=l.dname;
+------+---------+---------+------+------------+---------+---------+
| eid  | ename   | esal    | dno  | dname      | dloc    | pincode |
+------+---------+---------+------+------------+---------+---------+
|  101 | siva    | 3000.00 |   10 | HR         | Vizag   |  342345 |
|  104 | sachin  | 4000.00 |   10 | HR         | Vizag   |  342345 |
|  107 | rohith  | 3000.00 |   10 | HR         | Vizag   |  342345 |
|  102 | rama    | 4000.00 |   20 | admin      | pune    |  234123 |
|  106 | virat   | 4000.00 |   20 | admin      | pune    |  234123 |
| NULL | NULL    |    NULL | NULL | accountant | NULL    |  432345 |
|  103 | krishna | 5000.00 |   30 | R&D        | chennai |  563789 |
|  105 | dhoni   | 5000.00 |   30 | R&D        | chennai |  563789 |
| NULL | NULL    |    NULL | NULL | Analyst    | NULL    |  342138 |
+------+---------+---------+------+------------+---------+---------+
9 rows in set (0.00 sec)


										DAY-25
									       --------


INDEX Statement in SQL:
-----------------------
Indexes are used to retrieve data from the database more quickly.

The users cannot see the indexes, they are just used to speed up searches/queries.

The CREATE INDEX statement is used to create indexes in tables.

	syntax
	-------
CREATE INDEX index_name ON table_name (column1, column2, ...);

ex:
---
mysql> create index emp_index on emp(eid,ename,esal,dno);
Query OK, 0 rows affected (0.28 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select * from emp;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+
8 rows in set (0.00 sec)

Show indexes:
-------------
	syntax:
	-------
	SHOW INDEX FROM tableName;

ex:
---
mysql> show index from emp;
+-------------+----------+--------+-------------------+
| Table |  Key_name   | Seq_in_index | Column_name    |
+------------+---------+---------------+--------------+
| emp   |   emp_index |            1 | eid            |             
| emp   |   emp_index |            2 | ename          |                
| emp   |   emp_index |            3 | esal           | 
| emp   |   emp_index |            4 | dno            | 
+----------+--------+------+--------------------------+
4 rows in set (0.06 sec)


Rename index:
-------------
	syntax
	------
ALTER TABLE table_name RENAME INDEX old_index_name TO new_index_name;

ex:
--
mysql> alter table emp rename index emp_index to employe_index;
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> show index from emp;
+-------------+----------+--------+-----------------------+
| Table |  Key_name       | Seq_in_index | Column_name    |
+------------+---------+---------------+------------------+
| emp   |   employe_index |            1 | eid            |             
| emp   |   employe_index |            2 | ename          |                
| emp   |   employe_index |            3 | esal           | 
| emp   |   employe_index |            4 | dno            | 
+----------+--------+------+------------------------------+
4 rows in set (0.06 sec)


Drop index:
------------
	syntax
	-------
	ALTER TABLE table_name DROP INDEX index_name;

ex:
---
mysql> alter table emp drop index employe_index;
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> show index from emp;
Empty set (0.01 sec)


MySQL Views:
------------
in SQL, a view is a virtual table based on the result-set of an SQL statement.

A view contains rows and columns, just like a real table. The fields in a view are fields from one or more real tables in the database.

Creating a View:
----------------
A view is created with the CREATE VIEW statement.

	syntax
	------
	CREATE VIEW view_name AS SELECT * FROM table_name;

ex:
---
mysql> create view emp_view as select * from emp;
Query OK, 0 rows affected (0.02 sec)

mysql> select * from emp_view;
+-----+---------+---------+------+
| eid | ename   | esal    | dno  |
+-----+---------+---------+------+
| 101 | siva    | 3000.00 |   10 |
| 102 | rama    | 4000.00 |   20 |
| 103 | krishna | 5000.00 |   30 |
| 104 | sachin  | 4000.00 |   10 |
| 105 | dhoni   | 5000.00 |   30 |
| 106 | virat   | 4000.00 |   20 |
| 107 | rohith  | 3000.00 |   10 |
| 108 | ishan   | 2500.00 |   40 |
+-----+---------+---------+------+
8 rows in set (0.00 sec)

mysql> show tables;
+-------------------+
| Tables_in_my9amdb |
+-------------------+
| cust              |
| customer          |
| dept              |
| emp               |
| emp_char_i        |
| emp_copy          |
| emp_new           |
| emp_new_comp      |
| emp_view          |
| location          |
| lpad_enames       |
| student           |
| workers           |
+-------------------+
13 rows in set (0.00 sec)


Updating a View:
-----------------
A view can be updated with the CREATE OR REPLACE VIEW statement.

	syntax
	-------
CREATE OR REPLACE VIEW view_name AS
SELECT * FROM table_name [WHERE condition];

ex:
---
mysql> select * from cust;
+-----+-------+
| cid | cname |
+-----+-------+
| 101 | madam |
| 102 | bad   |
| 103 | dad   |
| 104 | mama  |
| 105 | mam   |
| 106 | siva  |
| 107 | papa  |
+-----+-------+
7 rows in set (0.01 sec)

mysql> create view cust_view as select * from cust;
Query OK, 0 rows affected (0.01 sec)

mysql> select * from cust_view;
+-----+-------+
| cid | cname |
+-----+-------+
| 101 | madam |
| 102 | bad   |
| 103 | dad   |
| 104 | mama  |
| 105 | mam   |
| 106 | siva  |
| 107 | papa  |
+-----+-------+
7 rows in set (0.00 sec)

mysql> select * from dept;
+-----+------------+---------+
| dno | dname      | dloc    |
+-----+------------+---------+
|  10 | HR         | Vizag   |
|  20 | admin      | pune    |
|  30 | R&D        | chennai |
|  50 | programmer | hyd     |
+-----+------------+---------+
4 rows in set (0.01 sec)

mysql> create view cust_view as select * from dept;
ERROR 1050 (42S01): Table 'cust_view' already exists

mysql> create or replace view dept_view as select * from dept;
Query OK, 0 rows affected (0.01 sec)

mysql> select * from dept_view;
+-----+------------+---------+
| dno | dname      | dloc    |
+-----+------------+---------+
|  10 | HR         | Vizag   |
|  20 | admin      | pune    |
|  30 | R&D        | chennai |
|  50 | programmer | hyd     |
+-----+------------+---------+
4 rows in set (0.01 sec)

mysql> create or replace view cust_view as select * from dept;
Query OK, 0 rows affected (0.01 sec)

mysql> select * from cust_view;
+-----+------------+---------+
| dno | dname      | dloc    |
+-----+------------+---------+
|  10 | HR         | Vizag   |
|  20 | admin      | pune    |
|  30 | R&D        | chennai |
|  50 | programmer | hyd     |
+-----+------------+---------+
4 rows in set (0.00 sec)

ex2:
----
mysql> create or replace view emp_10_view as select * from emp where dno=10;
Query OK, 0 rows affected (0.01 sec)

mysql> select * from emp_10_view;
+-----+--------+---------+------+
| eid | ename  | esal    | dno  |
+-----+--------+---------+------+
| 101 | siva   | 3000.00 |   10 |
| 104 | sachin | 4000.00 |   10 |
| 107 | rohith | 3000.00 |   10 |
+-----+--------+---------+------+
3 rows in set (0.01 sec)


										DAY-26
									       --------

how to drop the view?
----------------------
we can drop the view by using following command,

	syntax
	-----
	drop view viewname;

ex:
---
mysql> drop view emp_view;
Query OK, 0 rows affected (0.01 sec)




working with UNION and UNION ALL operators:
--------------------------------------------
UNION and UNION ALL in SQL are set operators that combine the result of two SELECT queries. 

UNION and UNION ALL in SQL are used to retrieve data from two or more tables.

UNION returns distinct records from both the table, while UNION ALL returns all the records from both the tables.

Rules:
-----
Both the SELECT statement must have the same number of columns and the same data type.

Columns in both the SELECT statement must be in the same order.

The names of the columns can be different, but the final result set will show the column name of the first select query.

ex:
----
employee table creation:

mysql> create table employee(id int,name char(20));
Query OK, 0 rows affected (0.09 sec)

insert the records into employee table:

mysql> insert into employee values(101,'siva');
Query OK, 1 row affected (0.03 sec)

mysql> insert into employee values(102,'rama');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(103,'krishna');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(104,'sachin');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(105,'dhoni');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(106,'virat');
Query OK, 1 row affected (0.01 sec)


manager table creation:
mysql> create table manager(id int,name char(20));
Query OK, 0 rows affected (0.03 sec)

insert the records into manager table:

mysql> insert into manager values(103,'krishna');
Query OK, 1 row affected (0.01 sec)

mysql> insert into manager values(106,'virat');
Query OK, 1 row affected (0.01 sec)

mysql> insert into manager values(109,'rohith');
Query OK, 1 row affected (0.01 sec)

retreive the employee data:

mysql> select * from employee;
+------+---------+
| id   | name    |
+------+---------+
|  101 | siva    |
|  102 | rama    |
|  103 | krishna |
|  104 | sachin  |
|  105 | dhoni   |
|  106 | virat   |
+------+---------+
6 rows in set (0.01 sec)

retreive the manager data:

mysql> select * from manager;
+------+---------+
| id   | name    |
+------+---------+
|  103 | krishna |
|  106 | virat   |
|  109 | rohith  |
+------+---------+
3 rows in set (0.00 sec)


union operation on employee and manager tables:

mysql> select * from employee union select * from manager;
+------+---------+
| id   | name    |
+------+---------+
|  101 | siva    |
|  102 | rama    |
|  103 | krishna |
|  104 | sachin  |
|  105 | dhoni   |
|  106 | virat   |
|  109 | rohith  |
+------+---------+
7 rows in set (0.01 sec)

union all operation on employee and manager tables:

mysql> select * from employee union all select * from manager;
+------+---------+
| id   | name    |
+------+---------+
|  101 | siva    |
|  102 | rama    |
|  103 | krishna |
|  104 | sachin  |
|  105 | dhoni   |
|  106 | virat   |
|  103 | krishna |
|  106 | virat   |
|  109 | rohith  |
+------+---------+
9 rows in set (0.00 sec)

DISTINCT clause:
------------------
SQL DISTINCT clause is used to remove the duplicate values from the result
set.

	syntax:
	--------
SELECT DISTINCT column1, column2 ...FROM table;
	
	syntax:
	--------
SELECT DISTINCT expressions  FROM tables [WHERE conditions]; 


ex: create employee table
---
mysql> create table employee(eid int primary key,ename char(30),esal double(6,2),dept char(20),loc char(30));
Query OK, 0 rows affected, 1 warning (0.03 sec)

ex: insert the records into employee table
----
mysql> insert into employee values(101,'siva',3000,'Admin','hyd');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(102,'rama',4000,'HR','pune');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(103,'krishna',5000,'Analyst','hyd');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(104,'sachin',4000,'Admin','chennai');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(105,'dhoni',3000,'programmer','vizag');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(106,'virat',7000,'HR','pune');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(107,'rohith',5000,'Admin','chennai');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(108,'sky',7000,'data engineer','mumbai');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(109,'kishan',5000,'QA Engineer','delhi');
Query OK, 1 row affected (0.01 sec)

mysql> insert into employee values(110,'siraj',4000,'programmer','hyd');
Query OK, 1 row affected (0.01 sec)

ex: retreive the data from the employee table
---
mysql> select * from employee;
+-----+---------+---------+---------------+---------+
| eid | ename   | esal    | dept          | loc     |
+-----+---------+---------+---------------+---------+
| 101 | siva    | 3000.00 | Admin         | hyd     |
| 102 | rama    | 4000.00 | HR            | pune    |
| 103 | krishna | 5000.00 | Analyst       | hyd     |
| 104 | sachin  | 4000.00 | Admin         | chennai |
| 105 | dhoni   | 3000.00 | programmer    | vizag   |
| 106 | virat   | 7000.00 | HR            | pune    |
| 107 | rohith  | 5000.00 | Admin         | chennai |
| 108 | sky     | 7000.00 | data engineer | mumbai  |
| 109 | kishan  | 5000.00 | QA Engineer   | delhi   |
| 110 | siraj   | 4000.00 | programmer    | hyd     |
+-----+---------+---------+---------------+---------+
10 rows in set (0.00 sec)

ex:
---
mysql> select dept from employee;
+---------------+
| dept          |
+---------------+
| Admin         |
| HR            |
| Analyst       |
| Admin         |
| programmer    |
| HR            |
| Admin         |
| data engineer |
| QA Engineer   |
| programmer    |
+---------------+
10 rows in set (0.00 sec)


mysql> select distinct dept from employee;
+---------------+
| dept          |
+---------------+
| Admin         |
| HR            |
| Analyst       |
| programmer    |
| data engineer |
| QA Engineer   |
+---------------+

mysql> select distinct dept,loc from employee;
+---------------+---------+
| dept          | loc     |
+---------------+---------+
| Admin         | hyd     |
| HR            | pune    |
| Analyst       | hyd     |
| Admin         | chennai |
| programmer    | vizag   |
| data engineer | mumbai  |
| QA Engineer   | delhi   |
| programmer    | hyd     |
+---------------+---------+
8 rows in set (0.00 sec)

mysql> select count(loc) from employee;
+------------+
| count(loc) |
+------------+
|         10 |
+------------+
1 row in set (0.00 sec)

mysql> select count(distinct loc) from employee;
+---------------------+
| count(distinct loc) |
+---------------------+
|                   6 |
+---------------------+
1 row in set (0.00 sec)


mysql> select distinct(dept) from employee where esal<=5000;
+-------------+
| dept        |
+-------------+
| Admin       |
| HR          |
| Analyst     |
| programmer  |
| QA Engineer |
+-------------+
5 rows in set (0.00 sec)

mysql> select count(distinct dept) from employee where esal<=5000;
+----------------------+
| count(distinct dept) |
+----------------------+
|                    5 |
+----------------------+
1 row in set (0.00 sec)


mysql> select distinct loc from employee where esal<=5000;
+---------+
| loc     |
+---------+
| hyd     |
| pune    |
| chennai |
| vizag   |
| delhi   |
+---------+
5 rows in set (0.00 sec)


intersect clause:
-----------------
the INTERSECT statement will return only those rows which will be common to both of the SELECT statements.

	syntax:
	-------
	select * from table_1 intersect select * from table_2;

	syntax:
	------
SELECT column1 , column2 ….FROM table_names [WHERE condition]

INTERSECT SELECT column1 , column2 …. FROM table_names [WHERE condition];


ex:
---
mysql> select * from employee;
+------+---------+
| id   | name    |
+------+---------+
|  101 | siva    |
|  102 | rama    |
|  103 | krishna |
|  104 | sachin  |
|  105 | dhoni   |
|  106 | virat   |
+------+---------+
6 rows in set (0.00 sec)

mysql> select * from manager;
+------+---------+
| id   | name    |
+------+---------+
|  103 | krishna |
|  106 | virat   |
|  109 | rohith  |
+------+---------+
3 rows in set (0.00 sec)

mysql> select * from employee intersect select * from manager;
+------+---------+
| id   | name    |
+------+---------+
|  103 | krishna |
|  106 | virat   |
+------+---------+
2 rows in set (0.01 sec)


										DAY-27
									       --------


Data Control Language(DCL) is used to control privileges in Database.

To perform any operation in the database, such as for creating tables, sequences or views, a user needs privileges.

Privileges are of two types,they are

System: This includes permissions for creating session, table, etc and all types of other system privileges.

Object: This includes permissions for any command or query to perform any operation on the database tables.

In DCL we have two commands,

GRANT: Used to provide any user access privileges or other priviliges for the database.

REVOKE: Used to take back permissions from any user.


how to show the users list?
--------------------------
if we want to show the list of users in mysql server, in that case we are using folowing command,
	
	select user from mysql.user

ex:
---
mysql> select user from mysql.user;
+------------------+
| user             |
+------------------+
| mysql.infoschema |
| mysql.session    |
| mysql.sys        |
| root             |
+------------------+
4 rows in set (0.01 sec)

how to get current user?
------------------------
if we want to get the current user information, in that case we are using following command,

	user()  or current_user()

ex:
---
mysql> select user();
+----------------+
| user()         |
+----------------+
| root@localhost |
+----------------+
1 row in set (0.01 sec)

	(or)

mysql> select current_user();
+----------------+
| current_user() |
+----------------+
| root@localhost |
+----------------+
1 row in set (0.00 sec)


how to create a user?
---------------------
if we want to create a user,in that case we are using following syntax

	syntax
	-------
	create user 'user_name' identified by 'password';

ex:
---
mysql> create user 'siva' identified by 'siva@123';
Query OK, 0 rows affected (0.07 sec)

mysql> select user from mysql.user;
+------------------+
| user             |
+------------------+
| siva             |
| mysql.infoschema |
| mysql.session    |
| mysql.sys        |
| root             |
+------------------+
5 rows in set (0.00 sec)

If you want to see the existing privileges for the user, execute the following command.

	SHOW GRANTS for username;  


how to connect the user through cmd/terminal in mysql server?
--------------------------------------------------------------
goto C:\Program Files\MySQL\MySQL Server 8.0\bin>
		|
     by using this command   mysql -u username -p
		|
     enter that particular user related password

ex:
---
C:\Program Files\MySQL\MySQL Server 8.0\bin>mysql -u siva -p
Enter password: ********
Welcome to the MySQL monitor. 

Grant Privileges to the MySQL New User
--------------------------------------
MySQL server provides multiple types of privileges to a new user account,Some of the most commonly used privileges are given below:


ALL PRIVILEGES: It permits all privileges to a new user account.

CREATE: It enables the user account to create databases and tables.

DROP: It enables the user account to drop databases and tables.

DELETE: It enables the user account to delete rows from a specific table.

INSERT: It enables the user account to insert rows into a specific table.

SELECT: It enables the user account to read a database.

UPDATE: It enables the user account to update table rows.


syntax:
--------
	GRANT ALL PRIVILEGES ON * . * TO username@localhost; 

			(or)

	GRANT ALL PRIVILEGES ON * . * TO username;


ex:  through mysql server command line
---
mysql> grant all privileges on *.* to siva;
Query OK, 0 rows affected (0.02 sec)

Sometimes, you want to flush all the privileges of a user account for changes occurs immediately, type the following command.

	syntax:
		FLUSH PRIVILEGES; 

ex: through windows command line
---
mysql> select user from mysql.user;
+------------------+
| user             |
+------------------+
| siva             |
| mysql.infoschema |
| mysql.session    |
| mysql.sys        |
| root             |
+------------------+
5 rows in set (0.00 sec)

mysql> select current_user();
+----------------+
| current_user() |
+----------------+
| siva@%         |
+----------------+
1 row in set (0.00 sec)

If you want to see the existing privileges for the user, execute the following command.

	SHOW GRANTS for username; 

ex:
---
mysql> show grants for siva;



REVOKE Privileges FROM the MySQL New User
-----------------------------------------
if we want to Revoke/Remove the privileges from any user, in that case we are using following command,

syntax:
-------
	REVOKE ALL PRIVILEGES ON * . * FROM username@localhost; 

			(or)

	REVOKE ALL PRIVILEGES ON * . * FROM username;

Sometimes, you want to flush all the privileges of a user account for changes occurs immediately, type the following command.

	syntax:
		FLUSH PRIVILEGES;   

ex:
---
REVOKE ALL PRIVILEGES ON * . * FROM siva; 

FLUSH PRIVILEGES;   

how to drop the user:
---------------------
	syntax
	-------
	drop user username;

	DROP USER username1@localhost, username2@localhost

ex:
---
mysql> select user from mysql.user;
+------------------+
| user             |
+------------------+
| siva             |
| mysql.infoschema |
| mysql.session    |
| mysql.sys        |
| root             |
+------------------+
5 rows in set (0.00 sec)

mysql> drop user siva;
Query OK, 0 rows affected (0.01 sec)

mysql> select user from mysql.user;
+------------------+
| user             |
+------------------+
| mysql.infoschema |
| mysql.session    |
| mysql.sys        |
| root             |
+------------------+
4 rows in set (0.00 sec)


										DAY-28
									       --------

What is Database Transaction?
-----------------------------
A transaction is a logical unit of work that accesses and updates the contents of a database.

Read and write operations are used by transactions to access data.

What are ACID Properties?
-------------------------
ACID Properties are used for maintaining the integrity of database during transaction processing.

ACID in DBMS stands for Atomicity, Consistency, Isolation, and Durability.

Atomicity: (either all or None)
---------
The term atomicity defines that the data remains atomic. It means if any operation is performed on the data, either it should be performed or executed completely or should not be executed at all.It further means that the operation should not break in between or execute partially.

	ref fig: atomicity example

Consistency: correctness of the data
------------
The word consistency means that the value should remain preserved always. In DBMS, the integrity of the data should be maintained, which means if a change in the database is made, it should remain preserved always. 

	ref fig: consistency example

Isolation: 
--------
The term 'isolation' means separation. In DBMS, Isolation is the property of a database where no data should affect the other one and may occur concurrently.

	ref fig: isolation example

Durability:
-----------
After successful completion of a transaction, the changes in the database should persistant. Even in the case of system failures.




										DAY-29
									      ----------

What is ER Diagram in DBMS ?
An Entity Relationship Diagram in DBMS is a blueprint of the database that can be later implemented as an actual database in the form of tables. It is a "diagrammatic representation of the database".
An ER diagram is used for creating a systematic study of the data requirements and then making a proper database. It is considered to be one of the best practices before implementing an actual database.
the entity-relationship diagram has entities, attributes, and the relationship between the data.
Note:
the entity-relationship diagram might look close to a flowchart, however, they contain some set of symbols and notations and their meanings are what make them unique. 
example:
 



in the above diagram, Teacher and Courses are two entities whereas teacher_Name is the attribute of the entity Teacher. Similarly, the Course_ID and Course_name are the attributes of the entity Courses.
Moreover, the relationship between the two entities will be many to many since many teachers can teach many courses at a University.
Why Use ER Diagrams?
The main reasons for using the ER diagram before constructing an actual database are as follows:
	An Entity Relationship Diagram is used for modeling the data that will be stored in a database.
	The database designers get a better understanding of the information that will be contained in the database using the Entity Relationship Diagram.
	An ER diagram is used as a blueprint by the database designers to implement the data in a certain application.
	They define what data will be stored in the databases, that is, the entities and their attributes.
	However, they also specify the relationships between the data.
	It provides a preview of how the tables should be connected and what entities are in which table.
	These ER diagrams can easily be converted into relational tables that help in the designing of the software quickly.
Symbols and its usage in an ER diagram:
Rectangle:
	It is used to represent the entities in an entity-relationship diagram.
Ellipses/Oval:
	This symbol is used to represent the attributes in an entity-relationship diagram.
Diamond:
	This symbol is used to represent the type of relationship that exists between the entities such as one-to-one, many-to-one, and many-to-many.
Lines:
	It links the entities to the relationship types whereas the attributes to the entity types.
Double Ellipses:
	It is used to represent a multivalued attribute.
Double rectangle:
	It is used to represent a weak entity.
Double diamond:
	It is used to represent a weak relationship between entities.
Note:
To represent a primary key in an entity-relationship diagram, the attributes are underlined and to represent the foreign key in an entity-relationship diagram, that attributes are dashed-underlined.
 
Components of the ER Diagram:
The ER diagram is made up of three components:
	Entities
	Attributes
	Relationships

 

















